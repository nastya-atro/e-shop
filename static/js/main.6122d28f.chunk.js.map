{"version":3,"sources":["reportWebVitals.js","store-1-main/3-dal-main/api.ts","store-2-features/ShopCart/3-dal-cart/apiCart.ts","store-2-features/ShopCart/2-bll-cart/CartReducer.ts","store-2-features/Store/product-3-dal/apiStore.ts","store-2-features/Store/product-2-bll/StoreReducer.ts","store-2-features/Users/3-dal-users/apiUsers.ts","store-2-features/Users/2-bll-users/UsersReducer.ts","store-1-main/2-bll-main/redux-store.ts","store-2-features/Store/product-2-bll/StoreSelector.ts","store-2-features/Store/product-1-ui/AddProductForm.tsx","store-2-features/Users/2-bll-users/UsersSelector.ts","store-3-common/Material.styles.ts","store-2-features/Store/product-1-ui/Store.tsx","store-2-features/Store/product-1-ui/Product.tsx","store-2-features/ShopCart/2-bll-cart/CartSelector.ts","store-2-features/ShopCart/1-ui-cart/AdminAllCart.tsx","store-2-features/Users/1-ui-users/Users.tsx","store-2-features/Users/1-ui-users/SignUpPage.tsx","store-2-features/Users/1-ui-users/LoginPage.tsx","store-2-features/Users/1-ui-users/SingleUser.tsx","store-2-features/ShopCart/1-ui-cart/AdminSingleCart.tsx","store-2-features/ShopCart/1-ui-cart/UserCart.tsx","store-2-features/Users/1-ui-users/MyProfile.tsx","store-2-features/ShopCart/1-ui-cart/AdminPage.tsx","store-1-main/1-ui-main/App.tsx","index.tsx","store-2-features/Users/1-ui-users/User.module.css","store-2-features/Store/product-1-ui/Store.module.css","store-2-features/ShopCart/1-ui-cart/Cart.module.css","store-1-main/1-ui-main/App.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instanse","axios","create","baseURL","apiCart","get","res","data","idCart","idUser","objNewProduct","post","delete","initialState","carts","singleCart","isLoading","actionsCart","type","cart","getUserCartsThunk","dispatch","a","addNewProductInCartThunk","obj","deleteProductCartThunk","id","CartReducer","state","action","filter","c","userId","apiStore","limitPage","value","idProduct","titleCategory","objInfo","put","products","singleProduct","sortValue","category","actionsStore","getProductsThunk","StoreReducer","map","p","apiUsers","username","password","user","patch","users","token","isAuth","error","singleUser","actionsUsers","getSingleUserThunk","UsersReducer","u","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","productsSelector","isLoadingSelector","limitPageSelector","singleProductSelector","categoryProductsSelector","AddProductForm","useDispatch","Container","maxWidth","className","s","form_add_new_product","initialValues","title","price","description","image","onSubmit","values","setSubmitting","x","JSON","parse","config","isSubmitting","handleChange","isValid","TextField","onChange","label","name","Button","disabled","variant","color","usersSelector","isAuthSelector","errorSelector","singleUserSelector","tokenSelector","useStylesApp","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","link","display","icon","width","height","breadcrumps","float","marginTop","fontSize","backgroundColor","padding","paper","textTransform","useStylesStore","container_grid","marginLeft","backdrop","zIndex","drawer","formControl","margin","minWidth","Store","classes","useSelector","categoryProducts","useState","pageLimit","setSortValue","setCategory","visibleAddForm","setvisibleAddForm","React","open","setOpen","useEffect","getCategoryProductsThunk","Backdrop","onClick","CircularProgress","container_store","products_sort","FormControl","InputLabel","Select","labelId","e","target","MenuItem","index","Box","add_new_product","Grid","container","direction","justify","item","Paper","container_paper","to","product_img","src","alt","IconButton","aria-label","date","Date","productId","quantity","addProductInCart","Product","changeProductFormVisible","setChangeProductFormVisible","deleteSuccess","setdeleteSuccess","changedSuccess","setchangedSuccess","cartAdded","setCartAdded","adress","useHistory","location","pathname","Number","substr","products_container","products_paper","back","products_title","products_img","products_description","products_form","changeProductinfoThunk","console","log","products_button_form","deleteProductThunk","products_button","cartsSelector","singleCartSelector","AdminAllCart","memo","cart_all","toLocaleDateString","Users","users_list","email","SignUpPage","setIsAuth","sign_up_input","userName","firstname","lastname","city","street","number","zipcode","phone","newUser","address","geolocation","lat","long","handleBlur","onBlur","sign_up_button","LoginPage","user_paper","login_input","status","autoComplete","login_button","User","user_cart_info","AgminSingleCart","cart_single_paper","cart_quanity","orderButton","UserCart","cart_paper","cart_date","cart_button","adminButton","MyProfile","visibleFormChanges","setVisibleFormChanges","deleteProfile","user_title","user_name","user_contacts","user_adress","user_form","user_change_button","user_button_form","AdminPage","orderVisible","setOrderVisible","usersVisible","setUsersVisible","Fragment","cart_users","cart_orders","AppC","withRouter","anchorRef","useRef","handleClose","event","current","contains","handleListKeyDown","key","preventDefault","prevOpen","focus","AppBar","appbar","position","Toolbar","ref","aria-controls","undefined","aria-haspopup","style","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","item_menu","Divider","Typography","Badge","badgeContent","length","Breadcrumbs","exact","path","render","AppContainer","MainApp","basename","process","ReactDOM","document","getElementById","module","exports"],"mappings":"0KAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gHCLDQ,E,OAAWC,EAAMC,OAAO,CACjCC,QAAQ,8BCCCC,EAAU,WAEf,OAAOJ,EAASK,IAAT,SACFX,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAHhBH,EAAU,SAKLI,GACV,OAAOR,EAASK,IAAT,gBAAsBG,IAC5Bd,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAPZH,EAAU,SASPK,GACR,OAAOT,EAASK,IAAT,qBAA2BI,IACjCf,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAXZH,EAAU,SAaFM,GACb,OAAOV,EAASW,KAAT,QAAuB,CAACD,kBAC9BhB,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAfZH,EAAU,SAqBDI,GACd,OAAOR,EAASY,OAAT,gBAAyBJ,IAC/Bd,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SCXrBM,EAAe,CACfC,MAAO,GACPC,WAAY,KACZC,WAAW,GAmDFC,EACK,SAACH,GAAD,MAA6B,CACvCI,KAAM,qBAAsBJ,UAFvBG,EAIU,SAACE,GAAD,MAAqB,CACpCD,KAAM,uBAAwBC,SALzBF,EAOS,SAACR,GAAD,MAAqB,CACnCS,KAAM,sBAAuBT,WARxBQ,EAUW,SAACE,GAAD,MAAqB,CACrCD,KAAM,2BAA4BC,SAX7BF,EAgBI,SAACT,GAAD,MAAqB,CAC9BU,KAAM,mBAAoBV,WAjBrBS,EAmBS,SAACD,GAAD,MAAyB,CACvCE,KAAM,yBAA0BF,cAsB3BI,EAAoB,SAACX,GAC9B,8CAAO,WAAOY,GAAP,eAAAC,EAAA,sEACclB,EAAoBK,GADlC,OACCF,EADD,OAEHc,EAASJ,EAA6BR,IACtCY,EAASJ,EAAyBV,IAH/B,2CAAP,uDAOSgB,EAA2B,SAACC,GACrC,8CAAO,WAAOH,GAAP,eAAAC,EAAA,sEACclB,EAAyBoB,GADvC,OACCjB,EADD,OAEHc,EAASJ,EAA+BV,IAFrC,2CAAP,uDAaSkB,EAAyB,SAACC,GAEnC,8CAAO,WAAOL,GAAP,SAAAC,EAAA,6DACHD,EAASJ,GAA6B,IADnC,SAEGb,EAA0BsB,GAF7B,OAGHL,EAASJ,EAAwBS,IACjCL,EAASJ,GAA6B,IAJnC,2CAAP,uDAQWU,EAxHK,WAAqF,IAApFC,EAAmF,uDAAzDf,EAAcgB,EAA2C,uCACpG,OAAQA,EAAOX,MACX,IAAK,qBACD,OAAO,2BACAU,GADP,IAEId,MAAOe,EAAOf,QAGtB,IAAK,uBACD,OAAO,2BACAc,GADP,IAEIb,WAAYc,EAAOV,OAG3B,IAAK,sBACD,OAAO,2BACAS,GADP,IAEId,MAAOc,EAAMd,MAAMgB,QAAO,SAACC,GAAD,OAAOA,EAAEC,SAAWH,EAAOpB,YAG7D,IAAK,2BACD,OAAO,2BACAmB,GADP,IAEId,MAAM,GAAD,mBAAMc,EAAMd,OAAZ,CAAmBe,EAAOV,SAEvC,IAAK,mBACD,OAAO,2BACAS,GADP,IAEIb,WAAYc,EAAOV,OAE3B,IAAK,mBACD,OAAO,2BACAS,GADP,IAEId,MAAOc,EAAMd,MAAMgB,QAAO,SAAAC,GAAC,OAAIA,EAAEL,KAAOG,EAAOrB,YAEvD,IAAK,yBACD,OAAO,2BACAoB,GADP,IAEIZ,UAAWa,EAAOb,YAG1B,QAAS,OAAOY,IC7DXK,EAAW,SACLC,EAAmBC,GAC9B,OAAOnC,EAASK,IAAT,yBAA+B6B,EAA/B,iBAAiDC,IACnDzC,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAHhB0B,EAAW,SAKHG,GACb,OAAOpC,EAASK,IAAT,mBAAyB+B,IAC3B1C,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAPhB0B,EAAW,WAahB,OAAOjC,EAASK,IAAT,wBAbF4B,EAAW,SAeAC,EAAmBC,EAAeE,GAClD,OAAOrC,EAASK,IAAT,4BAAkCgC,EAAlC,kBAAyDH,EAAzD,iBAA2EC,KAhB7EF,EAAW,SAkBNT,GACV,OAAOxB,EAASW,KAAT,WAA0B,CAAEa,SAnB9BS,EAAW,SAqBFG,EAAmBE,GACjC,OAAOtC,EAASuC,IAAT,mBAAyBH,GAAa,CAAEE,YAC1C5C,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAvBhB0B,EAAW,SAyBNG,GACV,OAAOpC,EAASY,OAAT,mBAA4BwB,IAC9B1C,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SClBzBM,EAAe,CACf2B,SAAU,GACVxB,WAAW,EACXkB,UAAW,GACXO,cAAe,KACfC,UAAW,OACXC,SAAU,IAiEDC,EACW,SAACJ,GAAD,MAAoC,CACpDtB,KAAM,4BAA6BsB,aAF9BI,EAIS,SAAC5B,GAAD,MAAyB,CACvCE,KAAM,6BAA8BF,cAL/B4B,EAOS,SAACV,GAAD,MAAwB,CACtChB,KAAM,0BAA2BgB,cAR5BU,EAUQ,SAACH,GAAD,MAAyC,CACtDvB,KAAM,8BAA+BuB,kBAXhCG,EAaO,SAACF,GAAD,MAAwB,CACpCxB,KAAM,yBAA0BwB,cAd3BE,EAgBgB,SAACD,GAAD,MAA8B,CACnDzB,KAAM,iCAAkCyB,aAjBnCC,EAmBQ,SAACpB,GAAD,MAAsB,CACnCN,KAAM,2BAA4BM,QApB7BoB,GAsBO,SAACN,EAAqBZ,GAAtB,MAAsC,CAClDR,KAAM,yBAA0BoB,UAASZ,OAvBpCkB,GAyBM,SAAClB,GAAD,MAAiB,CAC5BR,KAAM,yBAA0BQ,OAQ3BmB,GAAmB,SAACX,EAAmBQ,GAChD,8CAAO,WAAOrB,GAAP,eAAAC,EAAA,6DAGHD,EAASuB,GAA8B,IACvCvB,EAASuB,EAA8BV,IACvCb,EAASuB,EAA4BF,IALlC,SAMcT,EAAwBC,EAAWQ,GANjD,OAMCnC,EAND,OAQHc,EAASuB,EAAgCrC,IACzCc,EAASuB,GAA8B,IATpC,2CAAP,uDA+EWE,GA9KM,WAAqF,IAApFlB,EAAmF,uDAAzDf,EAAcgB,EAA2C,uCACrG,OAAQA,EAAOX,MACX,IAAK,4BACD,OAAO,2BACAU,GADP,IAEIY,SAAUX,EAAOW,WAGzB,IAAK,6BACD,OAAO,2BACAZ,GADP,IAEIZ,UAAWa,EAAOb,YAE1B,IAAK,0BACD,OAAO,2BACAY,GADP,IAEIM,UAAWL,EAAOK,YAE1B,IAAK,8BACD,OAAO,2BACAN,GADP,IAEIa,cAAeZ,EAAOY,gBAE9B,IAAK,yBACD,OAAO,2BACAb,GADP,IAEIc,UAAWb,EAAOa,YAE1B,IAAK,iCACD,OAAO,2BACAd,GADP,IAEIe,SAAS,CAAE,gBAAH,mBAAsBd,EAAOc,aAE7C,IAAK,2BACD,OAAO,2BACAf,GADP,IAEIY,SAAS,CAAEX,EAAOL,KAAV,mBAAkBI,EAAMY,aAExC,IAAK,yBACD,OAAO,2BACAZ,GADP,IAEIY,SAAUZ,EAAMY,SAASO,KAAI,SAACC,GAI1B,OAHIA,EAAEtB,KAAOG,EAAOH,KAChBsB,EAAInB,EAAOS,SAERU,OAGnB,IAAK,yBACD,OAAO,2BACApB,GADP,IAEIY,SAAUZ,EAAMY,SAASV,QAAO,SAAAkB,GAAC,OAAIA,EAAEtB,KAAOG,EAAOH,QAI7D,QAAS,OAAOE,IC5EXqB,GAAW,WAEhB,OAAOjD,EAASK,IAAT,SACFX,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAHhB0C,GAAW,SAKVC,EAAiBC,GACvB,OAAOnD,EAASW,KAAT,aAA4B,CAACuC,WAAUC,aAC7CzD,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAPZ0C,GAAW,SASbG,GACH,OAAOpD,EAASW,KAAT,QAAuB,CAACyC,SAC9B1D,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAXZ0C,GAAW,SAaNxC,GACV,OAAOT,EAASK,IAAT,gBAAsBI,IAC5Bf,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAfZ0C,GAAW,SAiBLxC,EAAgB2C,GAC3B,OAAOpD,EAASqD,MAAT,gBAAwB5C,GAAU,CAAC2C,SACzC1D,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SAnBZ0C,GAAW,SAqBNxC,GACV,OAAOT,EAASY,OAAT,gBAAyBH,IAC/Bf,MAAK,SAAAY,GAAG,OAAIA,EAAIC,SCArBM,GAAe,CACfyC,MAAO,GACPC,MAAO,KACPC,QAAQ,EACRC,OAAO,EACPC,WAAY,KACZ1C,WAAW,GAqDF2C,GACK,SAACL,GAAD,MAA8B,CACxCpC,KAAM,sBAAuBoC,UAFxBK,GAIK,SAACJ,EAAkBC,EAAiBC,GAApC,MAAwD,CAClEvC,KAAM,uBAAwBqC,QAAOC,SAAQC,UALxCE,GAOM,SAACP,EAAiBI,GAAlB,MAAuC,CAClDtC,KAAM,gBAAiBkC,OAAMI,WARxBG,GAUK,SAACD,GAAD,MAA4B,CACtCxC,KAAM,wBAAyBwC,eAX1BC,GAaW,SAACP,GAAD,MAAsB,CACtClC,KAAM,4BAA6BkC,SAd9BO,GAgBM,SAACjC,GAAD,MAAiB,CAC5BR,KAAM,uBAAwBQ,OAjBzBiC,GAmBS,SAAC3C,GAAD,MAAyB,CACvCE,KAAM,yBAA0BF,cAoC3B4C,GAAqB,SAAClC,GAC/B,8CAAO,WAAOL,GAAP,eAAAC,EAAA,sEACc2B,GAAuBvB,GADrC,OACCnB,EADD,OAEHc,EAASsC,GAA0BpD,IAFhC,2CAAP,uDAyBWsD,GAlIM,WAAqF,IAApFjC,EAAmF,uDAAzDf,GAAcgB,EAA2C,uCACrG,OAAQA,EAAOX,MACX,IAAK,sBACD,OAAO,2BACAU,GADP,IAEI0B,MAAOzB,EAAOyB,QAEtB,IAAK,uBACD,OAAO,2BACA1B,GADP,IAEI2B,MAAO1B,EAAO0B,MACdC,OAAQ3B,EAAO2B,OACfC,MAAO5B,EAAO4B,QAGtB,IAAK,gBACD,OAAO,2BACA7B,GADP,IAEI0B,MAAM,GAAD,mBAAM1B,EAAM0B,OAAZ,CAAmBzB,EAAOuB,OAC/BI,OAAQ3B,EAAO2B,SAEvB,IAAK,wBACD,OAAO,2BACA5B,GADP,IAEI8B,WAAY7B,EAAO6B,aAG3B,IAAK,4BACD,OAAO,2BACA9B,GADP,IAEI8B,WAAY7B,EAAOuB,OAG3B,IAAK,uBACD,OAAO,2BACAxB,GADP,IAEI0B,MAAO1B,EAAM0B,MAAMxB,QAAO,SAAAgC,GAAC,OAAIA,EAAEpC,KAAOG,EAAOH,QAGvD,IAAK,yBACD,OAAO,2BACAE,GADP,IAEIZ,UAAWa,EAAOb,YAE1B,QAAS,OAAOY,IC1EpBmC,GAAcC,YAAgB,CAC9BC,MAAOnB,GACP3B,KAAMQ,EACN2B,MAAOO,KAYII,GAFDC,YAAYH,GAAaI,YAAgBC,MCjB1CC,GAAiB,SAACzC,GAC3B,OAAOA,EAAMqC,MAAMzB,UAGV8B,GAAkB,SAAC1C,GAC5B,OAAOA,EAAMqC,MAAMjD,WAGVuD,GAAkB,SAAC3C,GAC5B,OAAOA,EAAMqC,MAAM/B,WAGVsC,GAAsB,SAAC5C,GAChC,OAAOA,EAAMqC,MAAMxB,eAOVgC,GAAyB,SAAC7C,GACnC,OAAOA,EAAMqC,MAAMtB,U,2LC8BR+B,GAvCkB,WAE7B,IAAMrD,EAAWsD,cAajB,OAEI,gBAACC,GAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWC,KAAEC,qBAAtC,UACI,uDACA,eAAC,KAAD,CACIC,cAAe,CAAEC,MAAO,GAAIC,MAAO,EAAGC,YAAa,GAAIC,MAAO,GAAI1C,SAAU,IAC5E2C,SAjBO,SAACC,EAAD,GAAiD,ILmJrC/D,EKnJWgE,EAAyB,EAAzBA,cAClCN,EAAQK,EAAOL,MACfC,EAAQI,EAAOJ,MACfC,EAAcG,EAAOH,YACrBC,EAAQE,EAAOF,MACf1C,EAAW4C,EAAO5C,SAEtBtB,GL4I2BG,EK5IC,CAAE0D,QAAOC,QAAOC,cAAaC,QAAO1C,YL6IpE,uCAAO,WAAOtB,GAAP,iBAAAC,EAAA,6DACHD,EAASuB,GAA8B,IADpC,SAEcX,EAAuBT,GAFrC,OAECjB,EAFD,OAGCkF,EAAIC,KAAKC,MAAMpF,EAAKqF,OAAOrF,MAC/Bc,EAASuB,EAA6B6C,EAAEjE,MACxCH,EAASuB,GAA8B,IALpC,2CAAP,wDK5II4C,GAAc,IAOV,SAIK,gBAAGK,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcP,EAA/B,EAA+BA,OAAQQ,EAAvC,EAAuCA,QAAvC,OACG,gBAAC,KAAD,WACI,+BAAK,eAACC,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,QAAQhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOL,UAC7F,qCAAM,eAACc,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,QAAQhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOJ,WAC9F,qCAAM,eAACa,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,cAAchF,KAAK,OAAOiF,KAAK,cAAchE,MAAOoD,EAAOH,cAA1G,OACA,qCAAM,eAACY,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,YAAYhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOF,WAClG,eAACW,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,WAAWhF,KAAK,OAAOiF,KAAK,WAAWhE,MAAOoD,EAAO5C,WAC9F,qCAAM,eAACyD,GAAA,EAAD,CAAQlF,KAAK,SAASmF,UAAWN,GAAWF,EAAcS,QAAQ,YAAYC,MAAM,UAApF,mBAAN,iBC3CXC,GAAc,SAAC5E,GACxB,OAAOA,EAAM0B,MAAMA,OAGVmD,GAAe,SAAC7E,GACzB,OAAOA,EAAM0B,MAAME,QAGVkD,GAAc,SAAC9E,GACxB,OAAOA,EAAM0B,MAAMG,OAGVkD,GAAmB,SAAC/E,GAC7B,OAAOA,EAAM0B,MAAMI,YAGVY,GAAkB,SAAC1C,GAC5B,OAAOA,EAAM0B,MAAMtC,WAGV4F,GAAc,SAAChF,GACxB,OAAOA,EAAM0B,MAAMC,O,oBCpBVsD,GAAeC,cAAW,SAACC,GAAD,OACrCC,aAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,KAAM,CACJC,QAAS,QAEXC,KAAM,CACJJ,YAAaL,EAAMM,QAAQ,IAC3BI,MAAO,GACPC,OAAQ,IAEVC,YAAa,CACXC,MAAO,QACPC,UAAW,OACXT,YAAa,QACbU,SAAU,OACVC,gBAAiB,6BACjBC,QAAS,QAEXC,MAAO,CACLb,YAAaL,EAAMM,QAAQ,IAE7BnC,MAAO,CACLgC,SAAU,EACVgB,cAAe,YACf3B,MAAO,cAMA4B,GAAiBrB,cAAW,SAACC,GAAD,OACrCC,aAAa,CACToB,eAAgB,CACZC,WAAY,SAEhBC,SAAU,CACNC,OAAQxB,EAAMwB,OAAOC,OAAS,EAC9BjC,MAAO,QAEXkC,YAAa,CACTC,OAAQ3B,EAAMM,QAAQ,GACtBsB,SAAU,UCqFPC,GA1HS,WAEpB,IAAMC,EAAUV,KACV3F,EAAWsG,YAAYzE,IACvBnC,EAAY4G,YAAYvE,IACxBvD,EAAY8H,YAAYxE,IACxByE,EAAmBD,YAAYrE,IAC/BlB,EAAQuF,YAAYlC,IAPA,EASQoC,mBAAS9G,GATjB,mBASnB+G,EATmB,aAUQD,mBAAS,KAVjB,mBAUnBtG,EAVmB,KAURwG,EAVQ,OAWMF,mBAAS,IAXf,mBAWnBrG,EAXmB,KAWTwG,EAXS,OAYkBH,oBAAS,GAZ3B,mBAYnBI,EAZmB,KAYHC,EAZG,OAcFC,IAAMN,UAAS,GAdb,mBAcnBO,EAdmB,KAcbC,EAda,KAmBpBnI,EAAWsD,cAiBjB,GAfA8E,qBAAU,WACNpI,EAASwB,GAAiBoG,EAAWvG,IACrCrB,ERwHJ,uCAAO,WAAOA,GAAP,eAAAC,EAAA,6DAEHD,EAASuB,GAA8B,IAFpC,SAGcX,IAHd,OAGC1B,EAHD,OAIHc,EAASuB,EAAqCrC,EAAKA,OACnDc,EAASuB,GAA8B,IALpC,2CAAP,yDQvHG,CAACqG,EAAWvG,IAGf+G,qBAAU,WAEFpI,EADa,4DAAbsB,ER2F4B,SAACT,EAAmBQ,EAAmBC,GAC3E,8CAAO,WAAOtB,GAAP,eAAAC,EAAA,6DAGHD,EAASuB,GAA8B,IACvCvB,EAASuB,EAA8BV,IACvCb,EAASuB,EAA4BF,IALlC,SAMcT,EAA6BC,EAAWQ,EAAWC,GANjE,OAMCpC,EAND,OAOHc,EAASuB,EAAgCrC,EAAKA,OAC9Cc,EAASuB,GAA8B,IARpC,2CAAP,sDQ3FiB8G,CAAyBT,EAAWvG,EAAWC,GAE/CE,GAAiBoG,EAAWvG,MAE1C,CAACC,IAGA3B,EACA,OAAO,eAAC2I,GAAA,EAAD,CAAU7E,UAAW+D,EAAQP,SAAUiB,KAAMA,EAAMK,QAtB1C,WAChBJ,GAAQ,IAqBD,SACH,eAACK,GAAA,EAAD,CAAkBtD,MAAM,cAchC,OACI,gBAAC3B,GAAA,EAAD,CAAWE,UAAWC,KAAE+E,gBAAiBjF,SAAS,KAAlD,UAGI,gBAACD,GAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWC,KAAEgF,cAAtC,UACI,gBAACC,GAAA,EAAD,CAAalF,UAAW+D,EAAQJ,YAAhC,UACI,eAACwB,GAAA,EAAD,CAAYvI,GAAG,2BAAf,mBACA,gBAACwI,GAAA,EAAD,CACIC,QAAQ,2BACRzI,GAAG,qBACHS,MAAOO,EACPuD,SAAU,SAACmE,GAAQlB,EAAakB,EAAEC,OAAOlI,QAJ7C,UAKI,eAACmI,GAAA,EAAD,CAAUnI,MAAM,MAAhB,gCACA,eAACmI,GAAA,EAAD,CAAUnI,MAAM,OAAhB,kCAKR,gBAAC6H,GAAA,EAAD,CAAalF,UAAW+D,EAAQJ,YAAhC,UACI,eAACwB,GAAA,EAAD,CAAYvI,GAAG,2BAAf,sBACA,eAACwI,GAAA,EAAD,CACIC,QAAQ,2BACRzI,GAAG,qBACHS,MAAOQ,EACPsD,SAAU,SAACmE,GAAQjB,EAAYiB,EAAEC,OAAOlI,QAJ5C,SAKK4G,GAAoBA,EAAiBhG,KAAI,SAAChB,EAAGwI,GAAJ,OAAc,eAACD,GAAA,EAAD,CAAsBnI,MAAOJ,EAA7B,SAA2CA,GAA5BwI,cAKnF,gBAACC,GAAA,EAAD,CAAK1F,UAAW+D,EAAQT,eAAxB,UAEK7E,GACG,sBAAKuB,UAAWC,KAAE0F,gBAAlB,SACI,eAACrE,GAAA,EAAD,CAAQwD,QAAS,WAAQP,GAAmBD,IAAmB9C,QAAQ,YAAYC,MAAM,YAAzF,iCAKP6C,GAAkB,eAAC,GAAD,IAEnB,eAACsB,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaxD,QAAS,EAAGvC,UAAWC,KAAEkC,KAA9E,SACKzE,GAAYA,EAASO,KAAI,SAACC,EAAGuH,GAAJ,OAAc,eAACG,GAAA,EAAD,CAAMI,MAAI,EAAV,SAEpC,gBAACC,GAAA,EAAD,CAAOjG,UAAWC,KAAEiG,gBAApB,UACI,eAAC,IAAD,CAASC,GAAE,oBAAejI,EAAEtB,IAA5B,SACI,uBAAKoD,UAAWC,KAAEG,MAAlB,cAA2BlC,EAAEkC,MAA7B,SAIJ,sBAAKJ,UAAWC,KAAEpC,SAAlB,SAA6BK,EAAEL,WAC/B,eAAC,IAAD,CAASsI,GAAE,oBAAejI,EAAEtB,IAA5B,SACI,sBAAKoD,UAAWC,KAAEmG,YAAlB,SAA+B,sBAAKC,IAAKnI,EAAEqC,MAAO+F,IAAKpI,EAAEkC,YAE7D,sBAAKJ,UAAWC,KAAEI,MAAlB,SAAyB,+BAAInC,EAAEmC,MAAN,UAEzB,+BACI,eAACkG,GAAA,EAAD,CAAYC,aAAW,mBAAvB,SACI,eAAC,KAAD,CAAkB1B,QAAS,YApElC,SAAClI,GACtB,IAAIF,EAAM,CACNQ,OAAQ,EACRuJ,KAAM,IAAIC,KACVhJ,SAAU,CAAC,CAAEiJ,UAAW/J,EAAIgK,SAAU,KAE1CrK,EAASE,EAAyBC,IA8D6BmK,CAAiB3I,EAAEtB,eAhBd6I,e,oBC0C7DqB,GAvIW,WAEtB,IAAMnJ,EAAgBqG,YAAYtE,IAC5BxD,EAAY8H,YAAYxE,IAHF,EAKoC0E,oBAAS,GAL7C,mBAKrB6C,EALqB,KAKKC,EALL,OAMc9C,oBAAS,GANvB,mBAMrB+C,EANqB,KAMNC,EANM,OAOgBhD,oBAAS,GAPzB,mBAOrBiD,EAPqB,KAOLC,EAPK,OAQMlD,oBAAS,GARf,mBAQrBmD,EARqB,KAQVC,EARU,KAUtB/K,EAAWsD,cAGb0H,EADYC,cACKC,SAASC,SAC1B9K,EAAK+K,OAAOJ,EAAOK,OAAO,KAwC9B,OALAjD,qBAAU,WTkFwB,IAACrH,ESjF/Bf,GTiF+Be,ESjFCV,ETkFpC,uCAAO,WAAOL,GAAP,eAAAC,EAAA,6DAEHD,EAASuB,GAA8B,IAFpC,SAGcX,EAA0BG,GAHxC,OAGC7B,EAHD,OAIHc,EAASuB,EAA6BrC,IACtCc,EAASuB,GAA8B,IALpC,2CAAP,0DSjFG,CAAClB,IAGAV,EACO,8CAKP,eAAC4D,GAAA,EAAD,CAAWE,UAAWC,KAAE4H,mBAAoB9H,SAAS,KAArD,SACI,gBAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAE6H,eAApB,UAEI,eAAC,IAAD,CAAS3B,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAE9CpK,EAAgB,iCACb,uBAAKqC,UAAWC,KAAE+H,eAAlB,UACI,8BAAKrK,EAAcyC,QACnB,iCAAK,4CAAiB,+BAAMzC,EAAcE,iBAG9C,sBAAKmC,UAAWC,KAAEgI,aAAlB,SAAgC,sBAAK5B,IAAK1I,EAAc4C,MAAO+F,IAAK3I,EAAcyC,UAClF,gCAAKzC,EAAc0C,MAAnB,QAEA,iCACI,eAACkG,GAAA,EAAD,CAAYC,aAAW,mBAAvB,SACI,eAAC,KAAD,CAAkB1B,QAAS,YArC1B,SAAClI,GACtB,IAAIF,EAAM,CACNQ,OAAQ,EACRuJ,KAAM,IAAIC,KACVhJ,SAAU,CAAC,CAAEiJ,UAAW/J,EAAIgK,SAAU,KAE1CrK,EAASE,EAAyBC,IAClC4K,GAAa,GA8B0CT,CAAiBlJ,EAAcf,SAErEyK,GAAa,6CAGlB,uBAAKrH,UAAWC,KAAEiI,qBAAlB,UAAwC,+CAAoB,+BAAMvK,EAAc2C,oBAC3E,KACT,iCAEK2G,EAAgB,oEAA6C,KAC7DE,EAAiB,oEAA6C,KAG9DJ,GAEG,sBAAK/G,UAAWC,KAAEkI,cAAlB,SACI,eAAC,KAAD,CACIhI,cAAe,CAAEC,MAAO,GAAIC,MAAO,GAAIC,YAAa,GAAIC,MAAO,GAAI1C,SAAU,IAC7E2C,SA9EF,SAACC,EAAD,GAAiD,IAA1BC,EAAyB,EAAzBA,cACzCN,EAAQK,EAAOL,MACfC,EAAQI,EAAOJ,MACfC,EAAcG,EAAOH,YACrBC,EAAQE,EAAOF,MACf1C,EAAW4C,EAAO5C,SAEtBtB,ET2I8B,SAACK,EAAYY,GAE/C,8CAAO,WAAOjB,GAAP,SAAAC,EAAA,6DACHD,EAASuB,GAA8B,IADpC,SAEGX,EAA2BP,EAAIY,GAFlC,OAIHjB,EAASuB,GAA4BN,EAASZ,IAC9CL,EAASuB,GAA8B,IALpC,2CAAP,sDS7IasK,CAAuBxL,EAAI,CAAEwD,QAAOC,QAAOC,cAAaC,QAAO1C,cACxEwK,QAAQC,IAAIlI,EAAOC,EAAOC,EAAaC,EAAO1C,GACzC3B,IACD8K,GAA4B,GAC5BI,GAAkB,IAEtB1G,GAAc,IA+DM,SAGK,gBAAGK,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcP,EAA/B,EAA+BA,OAAQQ,EAAvC,EAAuCA,QAAvC,OACG,gBAAC,KAAD,WACI,+BAAK,eAACC,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,mBAAmBhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOL,UAExG,+BAAK,eAACc,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,gBAAgBhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOJ,UAErG,+BAAK,eAACa,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,cAAchF,KAAK,OAAOiF,KAAK,cAAchE,MAAOoD,EAAOH,gBAEzG,qCAAM,eAACY,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,YAAYhF,KAAK,OAAOiF,KAAK,QAAQhE,MAAOoD,EAAOF,WAElG,+BAAK,eAACW,GAAA,EAAD,CAAWC,SAAUH,EAAcI,MAAM,sBAAsBhF,KAAK,OAAOiF,KAAK,WAAWhE,MAAOoD,EAAO5C,aAG9G,uBAAKmC,UAAWC,KAAEsI,qBAAlB,UAEI,eAACjH,GAAA,EAAD,CAAQlF,KAAK,SAASmF,UAAWN,GAAWF,EAAcS,QAAQ,YAAYC,MAAM,UAApF,mBAGA,eAACH,GAAA,EAAD,CAAQwD,QAAS,WAAQkC,GAA4B,IAAUxF,QAAQ,YAAYC,MAAM,UAAzF,+BAUxB,gBAACH,GAAA,EAAD,CAAQwD,QA3FF,WAClBvI,ET4I0B,SAACK,GAC/B,8CAAO,WAAOL,GAAP,eAAAC,EAAA,6DAEHD,EAASuB,GAA8B,IAFpC,SAGcX,EAAuBP,GAHrC,OAGCnB,EAHD,OAIH4M,QAAQC,IAAI7M,GACZc,EAASuB,GAA2BlB,IACpCL,EAASuB,GAA8B,IANpC,2CAAP,sDS7Ia0K,CAAmB5L,IACvBV,GACDgL,GAAiB,IAwFuB1F,QAAQ,YAAYC,MAAM,YAAYzB,UAAWC,KAAEwI,gBAAnF,UACKvM,EAAY,cAAgB,iBADjC,OAGA,eAACoF,GAAA,EAAD,CAAQwD,QAAS,WAAQkC,GAA4B,IAASxF,QAAQ,YAAYC,MAAM,YAAYzB,UAAWC,KAAEwI,gBAAjH,mC,oBCzIPC,GAAc,SAAC5L,GACxB,OAAOA,EAAMT,KAAKL,OAGT2M,GAAmB,SAAC7L,GAC7B,OAAOA,EAAMT,KAAKJ,YAGTuD,GAAkB,SAAC1C,GAC5B,OAAOA,EAAMT,KAAKH,WCuBP0M,GA5BMpE,IAAMqE,MAAK,WAE5B,IAAM7M,EAAQgI,YAAY0E,IAEpBnM,EAAWsD,cAMjB,OAJA8E,qBAAU,WACNpI,EbqFJ,uCAAO,WAAOA,GAAP,eAAAC,EAAA,sEACclB,IADd,OACCG,EADD,OAEHc,EAASJ,EAAyBV,IAF/B,2CAAP,yDapFG,CAACO,IAGA,+BAEKA,EAAMiC,KAAI,SAAChB,EAAGwI,GAAJ,OAAa,qCAAkB,eAAC,IAAD,CAASU,GAAE,gBAAWlJ,EAAEL,IAAxB,SAEtC,uBAAKoD,UAAWC,KAAE6I,SAAlB,UAEI,0CAAY,IAAIpC,KAAKzJ,EAAEwJ,MAAMsC,wBAC7B,iDAAmB9L,EAAEL,aALK6I,W,oBCU/BuD,GAvBD,WACV,IAAMxK,EAAQwF,YAAYtC,IAEpBnF,EAAWsD,cAMjB,OAJA8E,qBAAU,WACNpI,EVsGJ,uCAAO,WAAOA,GAAP,eAAAC,EAAA,sEACc2B,KADd,OACC1C,EADD,OAEHc,EAASsC,GAA0BpD,IAFhC,2CAAP,yDUrGG,CAAC+C,IAGA,+BACKA,EAAMP,KAAI,SAACe,GAAD,OAAO,gBAAC,IAAD,CAASmH,GAAE,gBAAWnH,EAAEpC,IAAxB,cAA+B,uBAAgBoD,UAAWC,KAAEgJ,WAA7B,UAC7C,+BAAMjK,EAAEZ,WACR,+BAAMY,EAAEkK,UAF+ClK,EAAEpC,IAA3C,aCuGfuM,GAlGI,WACf,IAAM5M,EAAWsD,cADI,EAGOqE,oBAAS,GAHhB,mBAGdxF,EAHc,KAGN0K,EAHM,KA+BrB,OAAI1K,EACO,eAAC,IAAD,CAAUyH,GAAI,MAIrB,iCACI,+CACA,sBAAKnG,UAAWC,KAAEoJ,cAAlB,SACI,eAAC,KAAD,CACIlJ,cAAe,CAAE+I,MAAO,GAAI7K,SAAU,GAAIiL,SAAU,GAAIC,UAAW,GAAIC,SAAU,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,EAAGC,QAAS,GAAIC,MAAO,IAC1IrJ,SApCF,SAACC,EAAD,GAAuD,IX0G7CnC,EW1GmBoC,EAAyB,EAAzBA,cACnCoJ,EAAU,CACVZ,MAAOzI,EAAOyI,MACd9K,SAAUqC,EAAO6I,SACjBjL,SAAUoC,EAAOpC,SACjBgD,KAAM,CACFkI,UAAW9I,EAAO8I,UAClBC,SAAU/I,EAAO+I,UAErBO,QAAS,CACLN,KAAMhJ,EAAOgJ,KACbC,OAAQjJ,EAAOiJ,OACfC,OAAQlJ,EAAOkJ,OACfC,QAASnJ,EAAOmJ,QAChBI,YAAa,CACTC,IAAK,GACLC,KAAM,KAGdL,MAAOpJ,EAAOoJ,OAElBtN,GXqFoB+B,EWrFCwL,EXsFzB,uCAAO,WAAOvN,GAAP,SAAAC,EAAA,sEACG2B,GAAgBG,GADnB,OAEH/B,EAASsC,GAA2BP,GAAM,IAFvC,2CAAP,wDWrFI8K,GAAU,GACV1I,GAAc,IAWN,SAIK,gBAAGK,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcP,EAA/B,EAA+BA,OAAQQ,EAAvC,EAAuCA,QACpCkJ,EADH,EACGA,WADH,OAEG,gBAAC,KAAD,WACI,gDACA,+BACI,eAACjJ,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,QAAQhE,MAAOoD,EAAOyI,MAAO9H,MAAM,YAEhD,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,WAAWhE,MAAOoD,EAAO6I,SAAUlI,MAAM,eAEtD,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,YAAYhE,MAAOoD,EAAO8I,UAAWnI,MAAM,gBAExD,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,WAAWhE,MAAOoD,EAAO+I,SAAUpI,MAAM,eAEtD,4CACA,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,OAAOhE,MAAOoD,EAAOgJ,KAAMrI,MAAM,SAC1C,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,SAAShE,MAAOoD,EAAOiJ,OAAQtI,MAAM,aAElD,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,SAAShE,MAAOoD,EAAOkJ,OAAQvI,MAAM,aAElD,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,UAAUhE,MAAOoD,EAAOmJ,QAASxI,MAAM,YAChD,6CACA,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,QAAQhE,MAAOoD,EAAOoJ,MAAOzI,MAAM,YAEhD,+BACI,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EACvC/N,KAAK,WAAWiF,KAAK,WAAWD,MAAM,WAAW/D,MAAOoD,EAAOpC,aAEvE,sBAAK2B,UAAWC,KAAEoK,eAAlB,SACI,eAAC/I,GAAA,EAAD,CAAQlF,KAAK,SAASmF,UAAWN,GAAWF,EAAcS,QAAQ,YAAYC,MAAM,YAApF,oCC3CjB6I,GApDG,WAEd,IAAM5L,EAASsF,YAAYrC,IACrBhD,EAAQqF,YAAYpC,IACpBrF,EAAWsD,cASjB,OAAInB,EACO,eAAC,IAAD,CAAUyH,GAAI,MAIrB,eAACrG,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,gBAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAEsK,WAApB,UACI,6CACA,sBAAKvK,UAAWC,KAAEuK,YAAlB,SACA,eAAC,KAAD,CACIrK,cAAe,CAAE+I,MAAO,GAAI7K,SAAU,IACtCmC,SAlBF,SAACC,EAAD,GAA0D,IZqG7C6I,EAAkBjL,EYrGCqC,EAAyB,EAAzBA,cAC1CnE,GZoGuB+M,EYpGC7I,EAAOyI,MZoGU7K,EYpGHoC,EAAOpC,SZqGjD,uCAAO,WAAO9B,GAAP,eAAAC,EAAA,sEACc2B,GAAmBmL,EAAUjL,GAD3C,OAEiB,WADhB5C,EADD,QAEMgP,QACLlO,EAASsC,GAA0BpD,GAAM,GAAO,IAEhDA,EAAKgD,OACLlC,EAASsC,GAA0BpD,GAAM,GAAM,IANhD,2CAAP,wDYpGIiF,GAAc,GACdD,EAAOyI,MAAQ,GACfzI,EAAOpC,SAAW,IAYV,SAIK,gBAAG0C,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcP,EAA/B,EAA+BA,OAAQQ,EAAvC,EAAuCA,QACpCkJ,EADH,EACGA,WADH,OAEG,gBAAC,KAAD,WACI,qCAAM,eAACjJ,GAAA,EAAD,CAAWtE,GAAG,iBAAiBuE,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OAC9EiF,KAAK,QAAQhE,MAAOoD,EAAOyI,MAAO9H,MAAM,UADhD,OAEA,qCAAM,eAACF,GAAA,EAAD,CAAWtE,GAAG,0BAA0BwE,MAAM,WAAWhF,KAAK,WAAWsO,aAAa,mBAAmBvJ,SAAUH,EAAcoJ,OAAQD,EACvI9I,KAAK,WAAWhE,MAAOoD,EAAOpC,cACtC,sBAAK2B,UAAWC,KAAE0K,aAAlB,SACI,eAACrJ,GAAA,EAAD,CAAQlF,KAAK,SAASmF,UAAWN,GAAWF,EAAcS,QAAQ,YAAYC,MAAM,YAApF,8BAOf9C,GAAS,qEACV,iCAAK,0CAAe,6CACZ,iCAAK,6CAAkB,qDAG/B,eAAC,GAAD,UCODiM,GAvDF,WACT,IAAMhM,EAAaoF,YAAYnC,IACzB7F,EAAQgI,YAAY0E,IAEpBnM,EAAWsD,cAGb0H,EADYC,cACKC,SAASC,SAC1B9K,EAAK+K,OAAOJ,EAAOK,OAAO,IAW9B,OATAjD,qBAAU,WACNpI,EAASuC,GAAmBlC,MAE7B,CAACA,IAEJ+H,qBAAU,WACNpI,EAASD,EAAkBM,MAC5B,IAGC,eAACkD,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,gBAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAEsK,WAApB,UACI,eAAC,IAAD,CAASpE,GAAG,SAAZ,SAAqB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SACpD,mDAECnJ,GAAc,iCACX,iCAAK,6CAAmBA,EAAWyC,KAAKkI,UAAxC,IAAoD3K,EAAWyC,KAAKmI,YACpE,iCAAK,8CAAoB5K,EAAWR,YAEpC,iCAAK,4CACD,2CAAaQ,EAAWsK,SACxB,2CAAatK,EAAWiL,YAE5B,iCAAK,0CACD,0CAAYjL,EAAWmL,QAAQN,QAC/B,4CAAc7K,EAAWmL,QAAQL,UACjC,6CAAe9K,EAAWmL,QAAQH,WAClC,qDAAuBhL,EAAWmL,QAAQC,YAAYC,IAAtD,qBAA6ErL,EAAWmL,QAAQC,YAAYE,cAIpH,iCAAK,+CACAlO,EAAQA,EAAMiC,KAAI,SAAChB,EAAGwI,GAAJ,OAAa,qCAAkB,eAAC,IAAD,CAASU,GAAE,gBAAWlJ,EAAEL,IAAxB,SAA8B,uBAAKoD,UAAWC,KAAE4K,eAAlB,UAC5E,0CAAY,IAAInE,KAAKzJ,EAAEwJ,MAAMsC,wBAC7B,+BAAM9L,EAAES,SAASO,KAAI,SAACC,EAAGuH,GAAJ,OAAc,iCAC/B,iDAAuBvH,EAAEyI,UACzB,4CAAkBzI,EAAE0I,WAFqBnB,eAFPA,MAMhB,gBCC/BqF,GAnDStG,IAAMqE,MAAK,WAE/B,IAAM5M,EAAa+H,YAAY2E,IACzBzM,EAAY8H,YAAYxE,IAExBjD,EAAWsD,cAGb0H,EADYC,cACKC,SAASC,SAC1B9K,EAAK+K,OAAOJ,EAAOK,OAAO,IAG9BjD,qBAAU,WlBmFoB,IAACjJ,EkBlF3Ba,GlBkF2Bb,EkBlFCkB,ElBmFhC,uCAAO,WAAOL,GAAP,eAAAC,EAAA,sEACclB,EAAsBI,GADpC,OACCD,EADD,OAEHc,EAASJ,EAA8BV,IAFpC,2CAAP,0DkBlFG,CAACmB,IAMJ,OACI,eAACkD,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,gBAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAE8K,kBAApB,UAEI,eAAC,IAAD,CAAS5E,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAE9C9L,GAAc,iCACX,iCAAK,0CAAL,IAAqB,+BAAMA,EAAWiB,SAAtC,OACA,iCAAK,wCAAL,IAAmB,+BAAM,IAAIwJ,KAAKzK,EAAWwK,MAAMsC,0BAEnD,+BAAM9M,EAAWyB,UAAYzB,EAAWyB,SAASO,KAAI,SAACC,EAAGuH,GAAJ,OAAc,iCAE/D,iDAF+D,IAE5CvH,EAAEyI,UACrB,wBAAM3G,UAAWC,KAAE+K,aAAnB,UACI,mDADJ,IACyB9M,EAAE0I,cAJ8CnB,YAW/EvJ,GAAa,gEAEf,eAACoF,GAAA,EAAD,CAAQwD,QA3BD,WACfvI,EAASI,EAAuBC,KA0BOoD,UAAWC,KAAEgL,YAAazJ,QAAQ,YAAYC,MAAM,YAAnF,sCCuBDyJ,GAjEE,WACb,IAAMlP,EAAQgI,YAAY0E,IACpBhK,EAASsF,YAAYrC,IAErBpF,EAAWsD,cAEjB8E,qBAAU,WACNpI,EAASD,EAAkB,MAC5B,IAQH,OACI,eAACwD,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,gBAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAEkL,WAApB,UACI,eAAC,IAAD,CAAShF,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAE/C,0CAECrJ,EACG,2CAAK1C,EAAQA,EAAMiC,KAAI,SAAChB,EAAGwI,GAAJ,OAAc,iCAEzB,uBAAKzF,UAAWC,KAAE5D,KAAlB,UAEI,eAAC,IAAD,CAAS8J,GAAE,gBAAWlJ,EAAEL,IAAxB,SACI,wCAAUK,EAAEL,QAGhB,uBAAKoD,UAAWC,KAAEmL,UAAlB,UAA6B,wCAA7B,IAA4C,IAAI1E,KAAKzJ,EAAEwJ,MAAMsC,wBAC7D,+BACK9L,EAAES,SAASO,KAAI,SAACC,EAAGuH,GAAJ,OAAc,iCAC1B,kDACA,gCAAOvH,EAAEyI,YAET,wBAAM3G,UAAWC,KAAE+K,aAAnB,UACI,mDACA,gCAAO9M,EAAE0I,gBANuBnB,WAYhD,+BACI,eAACnE,GAAA,EAAD,CAAQwD,QAAS,WArC9B,IAAClI,IAqCgDK,EAAEL,GApClEL,EAASI,EAAuBC,KAoCmDoD,UAAWC,KAAEoL,YAAa7J,QAAQ,YAAYC,MAAM,YAA3G,8BAvB+BgE,MA0B7B,UAEhB,iCAEE,mDAEA,eAAC,IAAD,CAASU,GAAG,SAAZ,SACI,eAAC7E,GAAA,EAAD,CAAQtB,UAAWC,KAAEqL,YAAa9J,QAAQ,YAAYC,MAAM,YAA5D,+BCuFb8J,GA/IG,WACd,IAAM3M,EAAaoF,YAAYnC,IACzB3F,EAAY8H,YAAYxE,IACxBd,EAASsF,YAAYrC,IAHP,EAKgCuC,oBAAS,GALzC,mBAKbsH,EALa,KAKOC,EALP,KAQdlP,EAAWsD,cA4BjB8E,qBAAU,WACNpI,EAASuC,GAAmB,MAC7B,IAEH,IAAM4M,EAAgB,WhBwGQ,IAAC9O,EgBvG3BL,GhBuG2BK,EgBvGC,EhByGhC,uCAAO,WAAOL,GAAP,SAAAC,EAAA,6DACHD,EAASsC,IAA8B,IADpC,SAEGV,GAAuBvB,GAF1B,OAGHL,EAASsC,GAA2BjC,IACpCL,EAASsC,IAA8B,IAJpC,2CAAP,yDgBjGA,OACI,eAACiB,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAEsK,WAApB,SACI,uBAAKvK,UAAWC,KAAE0L,WAAlB,UACI,eAAC,IAAD,CAASxF,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAC/C,6CAEA,+BACKrJ,EAAS,uCACLE,GAAc,iCAEX,uBAAKoB,UAAWC,KAAE2L,UAAlB,cAA8B,8CAC1B,iCAAK,4CAAkBhN,EAAWyC,KAAKkI,UAAvC,IAAmD3K,EAAWyC,KAAKmI,YACnE,iCAAK,wCAAc5K,EAAWR,eAElC,uBAAK4B,UAAWC,KAAE4L,cAAlB,UAAiC,4CAC7B,iCAAK,wCAAL,IAAoBjN,EAAWsK,SAC/B,iCAAK,wCAAL,IAAoBtK,EAAWiL,YAEnC,uBAAK7J,UAAWC,KAAE6L,YAAlB,UAA+B,0CAC3B,iCAAK,uCAAL,IAAmBlN,EAAWmL,QAAQN,QACtC,iCAAK,yCAAe7K,EAAWmL,QAAQL,UACvC,iCAAK,0CAAL,IAAsB9K,EAAWmL,QAAQH,WACzC,iCAAK,kDAAL,IAA8BhL,EAAWmL,QAAQC,YAAYC,IAA7D,qBAAoFrL,EAAWmL,QAAQC,YAAYE,cAK1HsB,GAAsB,sBAAKxL,UAAWC,KAAE8L,UAAlB,SACnB,eAAC,KAAD,CACI5L,cAAe,CAAE+I,MAAO,GAAI7K,SAAU,GAAIiL,SAAU,GAAIC,UAAW,GAAIC,SAAU,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,EAAGC,QAAS,GAAIC,MAAO,IAC1IrJ,SAtEb,SAACC,EAAD,GAAuD,IhB8HvC7D,EAAY0B,EgB9HCoC,EAAyB,EAAzBA,cACxCoJ,EAAU,CACVZ,MAAOzI,EAAOyI,MACd9K,SAAUqC,EAAO6I,SACjBjL,SAAUoC,EAAOpC,SACjBgD,KAAM,CACFkI,UAAW9I,EAAO8I,UAClBC,SAAU/I,EAAO+I,UAErBO,QAAS,CACLN,KAAMhJ,EAAOgJ,KACbC,OAAQjJ,EAAOiJ,OACfC,OAAQlJ,EAAOkJ,OACfC,QAASnJ,EAAOmJ,QAChBI,YAAa,CACTC,IAAK,GACLC,KAAM,KAGdL,MAAOpJ,EAAOoJ,OAElBtN,GhByG+BK,EgBzGC,EhByGW0B,EgBzGRwL,EhB2GvC,uCAAO,WAAOvN,GAAP,eAAAC,EAAA,sEACc2B,GAAwBvB,EAAI0B,GAD1C,OACC7C,EADD,OAEHc,EAASsC,GAAgCpD,IAFtC,2CAAP,wDgB1GIiF,GAAc,GACd+K,GAAsB,IA6CE,SAGK,gBAAG1K,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcP,EAA/B,EAA+BA,OAAQQ,EAAvC,EAAuCA,QACpCkJ,EADH,EACGA,WADH,OAEG,gBAAC,KAAD,WACI,gDACA,eAACjJ,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,QAAQhE,MAAOoD,EAAOyI,MAAO9H,MAAM,UAC5C,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,WAAWhE,MAAOoD,EAAO6I,SAAUlI,MAAM,aAClD,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,YAAYhE,MAAOoD,EAAO8I,UAAWnI,MAAM,cACpD,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,WAAWhE,MAAOoD,EAAO+I,SAAUpI,MAAM,aAClD,4CACA,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,OAAOhE,MAAOoD,EAAOgJ,KAAMrI,MAAM,SAC1C,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,SAAShE,MAAOoD,EAAOiJ,OAAQtI,MAAM,WAC9C,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,SAAShE,MAAOoD,EAAOkJ,OAAQvI,MAAM,WAC9C,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,UAAUhE,MAAOoD,EAAOmJ,QAASxI,MAAM,YAChD,6CACA,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EAAY/N,KAAK,OACxDiF,KAAK,QAAQhE,MAAOoD,EAAOoJ,MAAOzI,MAAM,UAE5C,eAACF,GAAA,EAAD,CAAWC,SAAUH,EAAcoJ,OAAQD,EACvC/N,KAAK,WAAWiF,KAAK,WAAWD,MAAM,WAAW/D,MAAOoD,EAAOpC,WAEnE,sBAAK2B,UAAWC,KAAE+L,mBAAlB,SACI,eAAC1K,GAAA,EAAD,CAAQwD,QAAS4G,EAAelK,QAAQ,YAAYC,MAAM,UAAUrF,KAAK,SAASmF,UAAWN,GAAWF,EAAxG,gCASlB7E,GAAa,gEAEf,uBAAK8D,UAAWC,KAAEgM,iBAAlB,UACI,eAAC3K,GAAA,EAAD,CAAQwD,QA9Ed,WAClB2G,GAAsB,IA6EkCrP,KAAK,SAASoF,QAAQ,YAAYC,MAAM,YAAxE,6BAEA,eAACH,GAAA,EAAD,CAAQwD,QAAS4G,EAAelK,QAAQ,YAAYC,MAAM,UAA1D,mCAKF,iCACE,mDACA,eAAC,IAAD,CAAS0E,GAAG,SAAZ,SACI,eAAC7E,GAAA,EAAD,CAAQtB,UAAWC,KAAEqL,YAAa9J,QAAQ,YAAYC,MAAM,YAA5D,mC,6MClGrByK,GAnCG,WAAO,IAAD,EAEoBhI,oBAAS,GAF7B,mBAEbiI,EAFa,KAECC,EAFD,OAGoBlI,oBAAS,GAH7B,mBAGbmI,EAHa,KAGCC,EAHD,KAId5N,EAASsF,YAAYrC,IAE3B,OACI,eAAC7B,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAACkG,GAAA,EAAD,CAAOjG,UAAWC,KAAEkL,WAApB,SAEKzM,EAAS,gBAAC,IAAM6N,SAAP,WACN,eAAC,IAAD,CAASpG,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAE/C,sBAAKjD,QAAS,WAAQwH,GAAiBD,IAAiBrM,UAAWC,KAAEuM,WAArE,mBACCH,GAAgB,eAAC,GAAD,IAEjB,sBAAKvH,QAAS,WAAQsH,GAAiBD,IAAiBnM,UAAWC,KAAEwM,YAArE,oBACCN,GAAgB,eAAC,GAAD,OAGnB,iCACM,eAAC,IAAD,CAAShG,GAAG,IAAZ,SAAgB,eAAC,KAAD,CAAkBnG,UAAWC,KAAE8H,SAE/C,4DAEA,eAAC,IAAD,CAAS5B,GAAG,SAAZ,SACI,eAAC7E,GAAA,EAAD,CAAQtB,UAAWC,KAAEqL,YAAa9J,QAAQ,YAAYC,MAAM,YAA5D,8BC+GxBiL,GAAOC,aAvHC,WACV,IAAM5I,EAAUhC,KAEVrD,EAASsF,YAAYrC,IACrB3F,EAAQgI,YAAY0E,IAJV,EAMQlE,IAAMN,UAAS,GANvB,mBAMTO,EANS,KAMHC,EANG,KAOVkI,EAAYpI,IAAMqI,OAA0B,MAO5CC,EAAc,SAACC,GACfH,EAAUI,SAAWJ,EAAUI,QAAQC,SAASF,EAAMxH,SAG1Db,GAAQ,IAGV,SAASwI,EAAkBH,GACP,QAAdA,EAAMI,MACRJ,EAAMK,iBACN1I,GAAQ,IAIZ,IAAM2I,EAAW7I,IAAMqI,OAAOpI,GAU9B,OATAD,IAAMG,WAAU,YACW,IAArB0I,EAASL,UAA6B,IAATvI,GAC/BmI,EAAUI,QAASM,QAErBD,EAASL,QAAUvI,IAClB,CAACA,IAKF,gBAAC,IAAM8H,SAAP,WAEE,eAACgB,GAAA,EAAD,CAAQvN,UAAWC,IAAEuN,OAAQC,SAAS,SAAtC,SACE,gBAACC,GAAA,EAAD,CAAS1N,UAAWC,IAAEuN,OAAQhM,QAAQ,QAAtC,UAEE,iCACE,eAACF,GAAA,EAAD,CAAQqM,IAAKf,EAAWgB,gBAAenJ,EAAO,sBAAmBoJ,EAAWC,gBAAc,OAAOhJ,QAnCtF,WACnBJ,GAAQ,SAAC2I,GAAD,OAAeA,MAkCf,SACE,eAAC,KAAD,CAAUU,MAAO,CAAEtM,MAAO,aAG5B,eAACuM,GAAA,EAAD,CAAQvJ,KAAMA,EAAMwJ,SAAUrB,EAAUI,QAASkB,UAAML,EAAWM,YAAU,EAACC,eAAa,EAA1F,SACG,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,eAACC,GAAA,EAAD,2BACMF,GADN,IAEEN,MAAO,CAAES,gBAA+B,WAAdF,EAAyB,aAAe,iBAFpE,SAIE,eAACrI,GAAA,EAAD,UAEE,eAACwI,GAAA,EAAD,CAAmBC,YAAa5B,EAAhC,SACE,gBAAC6B,GAAA,EAAD,CAAUC,cAAenK,EAAM7H,GAAG,iBAAiBiS,UAAW3B,EAA9D,UAEE,gBAAC1H,GAAA,EAAD,CAAUxF,UAAWC,IAAE6O,UAAWhK,QAASgI,EAA3C,cAAyD,gBAAC,IAAD,CAAS3G,GAAG,IAAZ,UACvD,eAAC,KAAD,IADuD,IAC1C,kDAEf,gBAACX,GAAA,EAAD,CAAUxF,UAAWC,IAAE6O,UAAWhK,QAASgI,EAA3C,cAAyD,gBAAC,IAAD,CAAS3G,GAAG,YAAZ,UACvD,eAAC,KAAD,IAAoB,wDAEtB,gBAACX,GAAA,EAAD,CAAUxF,UAAWC,IAAE6O,UAAWhK,QAASgI,EAA3C,cAAyD,gBAAC,IAAD,CAAS3G,GAAG,WAAZ,UACvD,eAAC,KAAD,IAAc,+CADyC,WAGvDzH,GAAU,gBAAC8G,GAAA,EAAD,CAAUxF,UAAWC,IAAE6O,UAAWhK,QAASgI,EAA3C,cAAyD,gBAAC,IAAD,CAAS3G,GAAG,SAAZ,UACnE,eAAC,KAAD,IAAiB,gDACnB,eAAC4I,GAAA,EAAD,IAEA,gBAACvJ,GAAA,EAAD,CAAUxF,UAAWC,IAAE6O,UAAWhK,QAASgI,EAA3C,cAAyD,gBAAC,IAAD,CAAS3G,GAAG,SAAZ,UACvD,eAAC,KAAD,IADuD,IAC7B,wEAW1C,eAAC6I,GAAA,EAAD,CAAYhP,UAAW+D,EAAQ3D,MAAOoB,QAAQ,KAAKC,MAAM,UAAzD,SAAmE,eAAC,IAAD,CAAS0E,GAAG,IAAInG,UAAWC,IAAEG,MAA7B,wBAEnE,eAACmG,GAAA,EAAD,CAAYC,aAAW,mBAAmB/E,MAAM,UAAhD,SACE,eAACwN,GAAA,EAAD,CAAOC,aAAclT,EAAMmT,OAAQ1N,MAAM,YAAzC,SACE,gBAAC,IAAD,CAAS0E,GAAG,YAAZ,cAAyB,eAAC,KAAD,CAAkB4H,MAAO,CAAEtM,MAAO,uBAQnE,gBAAC2N,GAAA,EAAD,CAAa5I,aAAW,aAAaxG,UAAW+D,EAAQlB,YAAxD,UACE,eAAC,IAAD,CAASsD,GAAG,IAAInG,UAAWC,IAAEuC,KAA7B,uBACA,eAAC,IAAD,CAAS2D,GAAG,WAAWnG,UAAWC,IAAEuC,KAApC,0BACA,eAAC,IAAD,CAAS2D,GAAG,YAAYnG,UAAWC,IAAEuC,KAArC,gCAIF,eAAC,IAAD,CAAO6M,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,eAAC,GAAD,OAC1C,eAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM,eAAC,GAAD,OAC7C,eAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,eAAC,GAAD,OACtC,eAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,eAAC,GAAD,OACnC,eAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,eAAC,GAAD,OACnC,eAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,eAAC,GAAD,OACpC,eAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAM,eAAC,GAAD,OACjD,eAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM,eAAC,GAAD,OAC7C,eAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,eAAC,GAAD,OACrC,eAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,eAAC,GAAD,aAQnCC,GAAe,WACnB,OACE,eAAC9C,GAAD,KAYW+C,GARS,WACtB,OAAO,eAAC,IAAD,CAAeC,SAAUC,UAAzB,SACL,eAAC,IAAD,CAAUxQ,MAAOA,GAAjB,SACE,eAAC,GAAD,SCzJNyQ,IAASL,OAEL,eAAC,GAAD,IACFM,SAASC,eAAe,SAI1BrV,K,mBCZAsV,EAAOC,QAAU,CAAC,WAAa,yBAAyB,UAAY,wBAAwB,cAAgB,4BAA4B,YAAc,0BAA0B,iBAAmB,+BAA+B,UAAY,wBAAwB,mBAAqB,iCAAiC,WAAa,yBAAyB,aAAe,2BAA2B,YAAc,0BAA0B,cAAgB,4BAA4B,eAAiB,6BAA6B,WAAa,yBAAyB,eAAiB,6BAA6B,KAAO,mBAAmB,YAAc,4B,mBCA1oBD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,eAAiB,8BAA8B,cAAgB,6BAA6B,aAAe,4BAA4B,eAAiB,8BAA8B,eAAiB,8BAA8B,qBAAuB,oCAAoC,mBAAqB,kCAAkC,gBAAkB,+BAA+B,cAAgB,6BAA6B,qBAAuB,oCAAoC,qBAAuB,oCAAoC,YAAc,2BAA2B,gBAAkB,+BAA+B,MAAQ,qBAAqB,SAAW,wBAAwB,MAAQ,qBAAqB,gBAAkB,+BAA+B,KAAO,sB,mBCA31BD,EAAOC,QAAU,CAAC,WAAa,yBAAyB,YAAc,0BAA0B,KAAO,mBAAmB,aAAe,2BAA2B,UAAY,wBAAwB,kBAAoB,gCAAgC,WAAa,yBAAyB,YAAc,0BAA0B,SAAW,uBAAuB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,4B,mBCA5bD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,UAAY,uBAAuB,MAAQ,sB","file":"static/js/main.6122d28f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\nexport const instanse = axios.create({\r\n    baseURL: `https://fakestoreapi.com/`\r\n})\r\n\r\n","import { instanse } from \"../../../store-1-main/3-dal-main/api\"\r\nimport {CartType} from './../2-bll-cart/CartReducer'\r\n\r\n\r\nexport const apiCart = {\r\n    getAllCart() {\r\n        return instanse.get(`carts`)\r\n            .then(res => res.data)\r\n    },\r\n    getSingleCart(idCart: number){\r\n        return instanse.get(`carts/${idCart}`)\r\n        .then(res => res.data)\r\n    },\r\n    getUserCart(idUser: number){\r\n        return instanse.get(`carts/user/${idUser}`)\r\n        .then(res => res.data)\r\n    },\r\n    addProductInCart(objNewProduct: CartType){\r\n        return instanse.post(`carts`, {objNewProduct})\r\n        .then(res => res.data)\r\n    },\r\n    changeProductCart(idCart: number, objNewProduct: CartType){\r\n        return instanse.put(`carts/${idCart}`, {objNewProduct})\r\n        .then(res => res.data)\r\n    },\r\n    deleteProductCart(idCart: number){\r\n        return instanse.delete(`carts/${idCart}`)\r\n        .then(res => res.data)\r\n    }\r\n}","import { CommonActionsTypes, CommonThunkType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\nimport { apiCart } from './../3-dal-cart/apiCart';\r\n\r\ntype ProductsType = {\r\n    productId: number\r\n    quantity: number\r\n}\r\n\r\nexport type CartType = {\r\n    id?: number\r\n    userId: number\r\n    date: Date\r\n    products: Array<ProductsType>\r\n}\r\n\r\n\r\nlet initialState = {\r\n    carts: [] as Array<CartType>,\r\n    singleCart: null as null | CartType,\r\n    isLoading: true\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst CartReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'cart/SET_ALL_CARTS':\r\n            return {\r\n                ...state,\r\n                carts: action.carts\r\n            }\r\n\r\n        case 'cart/SET_SINGLE_CART':\r\n            return {\r\n                ...state,\r\n                singleCart: action.cart\r\n            }\r\n\r\n        case 'cart/SET_USER_CARTS':\r\n            return {\r\n                ...state,\r\n                carts: state.carts.filter((c) => c.userId === action.idUser)\r\n            }\r\n\r\n        case 'cart/ADD_PRODUCT_IN_CART':\r\n            return {\r\n                ...state,\r\n                carts: [...state.carts, action.cart]\r\n            }\r\n        case 'cart/CHANGE_CART':\r\n            return {\r\n                ...state,\r\n                singleCart: action.cart\r\n            }\r\n        case 'cart/DELETE_CART':\r\n            return {\r\n                ...state,\r\n                carts: state.carts.filter(c => c.id !== action.idCart)\r\n            }\r\n        case 'cart/TOOGLE_IS_LOAGING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const actionsCart = {\r\n    cartsRecived: (carts: Array<CartType>) => ({\r\n        type: 'cart/SET_ALL_CARTS', carts\r\n    } as const),\r\n    singleCartRecived: (cart: CartType) => ({\r\n        type: 'cart/SET_SINGLE_CART', cart\r\n    } as const),\r\n    userCartsRecived: (idUser: number) => ({\r\n        type: 'cart/SET_USER_CARTS', idUser\r\n    } as const),\r\n    productAddedInCart: (cart: CartType) => ({\r\n        type: 'cart/ADD_PRODUCT_IN_CART', cart\r\n    } as const),\r\n    cartChanged: (cart: CartType) => ({\r\n        type: 'cart/CHANGE_CART', cart\r\n    } as const),\r\n    cartDeleted: (idCart: number) => ({\r\n        type: 'cart/DELETE_CART', idCart\r\n    } as const),\r\n    isLoadingChanged: (isLoading: boolean) => ({\r\n        type: 'cart/TOOGLE_IS_LOAGING', isLoading\r\n    } as const),\r\n\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actionsCart>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\nexport const getAllCartsThunk = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiCart.getAllCart()\r\n        dispatch(actionsCart.cartsRecived(data))\r\n    }\r\n}\r\n\r\nexport const getSingleCartThunk = (idCart: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiCart.getSingleCart(idCart)\r\n        dispatch(actionsCart.singleCartRecived(data))\r\n    }\r\n}\r\n\r\nexport const getUserCartsThunk = (idUser: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiCart.getUserCart(idUser)\r\n        dispatch(actionsCart.userCartsRecived(idUser))\r\n        dispatch(actionsCart.cartsRecived(data))\r\n    }\r\n}\r\n\r\nexport const addNewProductInCartThunk = (obj: CartType): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiCart.addProductInCart(obj)\r\n        dispatch(actionsCart.productAddedInCart(data))\r\n    }\r\n}\r\n\r\nexport const changeProductInCartThunk = (idCart: number, obj: CartType): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiCart.changeProductCart(idCart, obj)\r\n        dispatch(actionsCart.cartChanged(data))\r\n    }\r\n}\r\n\r\nexport const deleteProductCartThunk = (id: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(actionsCart.isLoadingChanged(true))\r\n        await apiCart.deleteProductCart(id)\r\n        dispatch(actionsCart.cartDeleted(id))\r\n        dispatch(actionsCart.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport default CartReducer","import { ValuesType } from '../product-1-ui/AddProductForm';\r\nimport { instanse } from './../../../store-1-main/3-dal-main/api';\r\n\r\n\r\nexport const apiStore = {\r\n    getAllProducts(limitPage: number, value: string) {\r\n        return instanse.get(`products?limit=${limitPage}&sort=${value}`)\r\n            .then(res => res.data)\r\n    },\r\n    getSingleProduct(idProduct: number) {\r\n        return instanse.get(`products/${idProduct}`)\r\n            .then(res => res.data)\r\n    },\r\n    sortProducts(value: string) {\r\n        return instanse.get(`products?sort=${value}`)\r\n    },\r\n    getCategory() {\r\n        return instanse.get(`products/categories`)\r\n    },\r\n    getCategoryProducts(limitPage: number, value: string, titleCategory: string) {\r\n        return instanse.get(`products/category/${titleCategory}?limit=${limitPage}&sort=${value}`)\r\n    },\r\n    addNewProduct(obj: ValuesType) {\r\n        return instanse.post(`products`, { obj })\r\n    },\r\n    updateProductInfo(idProduct: number, objInfo: ValuesType) {\r\n        return instanse.put(`products/${idProduct}`, { objInfo })\r\n            .then(res => res.data)\r\n    },\r\n    deleteProduct(idProduct: number) {\r\n        return instanse.delete(`products/${idProduct}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import { CommonActionsTypes, CommonThunkType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\nimport { ValuesType } from \"../product-1-ui/AddProductForm\"\r\nimport { apiStore } from \"../product-3-dal/apiStore\"\r\n\r\ntype ProductsType = {\r\n    id?: number,\r\n    title: string,\r\n    price: number,\r\n    category: string,\r\n    description: string,\r\n    image: string\r\n}\r\n\r\nlet initialState = {\r\n    products: [] as Array<ProductsType>,\r\n    isLoading: true,\r\n    limitPage: 20,\r\n    singleProduct: null as null | ProductsType,\r\n    sortValue: 'desc',\r\n    category: [] as null | Array<String>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst StoreReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'products/SET_ALL_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.products\r\n            }\r\n\r\n        case 'products/TOOGLE_IS_LOAGING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        case 'products/SET_LIMIT_PAGE':\r\n            return {\r\n                ...state,\r\n                limitPage: action.limitPage\r\n            }\r\n        case 'products/SET_SINGLE_PRODUCT':\r\n            return {\r\n                ...state,\r\n                singleProduct: action.singleProduct\r\n            }\r\n        case 'products/SORT_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                sortValue: action.sortValue\r\n            }\r\n        case 'products/GET_CATEGORY_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                category: ['All products', ...action.category]\r\n            }\r\n        case 'products/ADD_NEW_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: [action.obj, ...state.products]\r\n            }\r\n        case 'product/UPDATE_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: state.products.map((p) => {\r\n                    if (p.id === action.id) {\r\n                        p = action.objInfo\r\n                    }\r\n                    return p\r\n                })\r\n            }\r\n        case 'product/DELETE_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: state.products.filter(p => p.id !== action.id)\r\n            }\r\n\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const actionsStore = {\r\n    allProductsRecived: (products: Array<ProductsType>) => ({\r\n        type: 'products/SET_ALL_PRODUCTS', products\r\n    } as const),\r\n    isLoadingChanged: (isLoading: boolean) => ({\r\n        type: 'products/TOOGLE_IS_LOAGING', isLoading\r\n    } as const),\r\n    limitPageChanged: (limitPage: number) => ({\r\n        type: 'products/SET_LIMIT_PAGE', limitPage\r\n    } as const),\r\n    productSelected: (singleProduct: null | ProductsType) => ({\r\n        type: 'products/SET_SINGLE_PRODUCT', singleProduct\r\n    } as const),\r\n    sortedProducts: (sortValue: string) => ({\r\n        type: 'products/SORT_PRODUCTS', sortValue\r\n    } as const),\r\n    categoryProductsRecived: (category: Array<string>) => ({\r\n        type: 'products/GET_CATEGORY_PRODUCTS', category\r\n    } as const),\r\n    newProductAdded: (obj: ValuesType) => ({\r\n        type: 'products/ADD_NEW_PRODUCT', obj\r\n    } as const),\r\n    productUpdated: (objInfo: ValuesType, id: number) => ({\r\n        type: 'product/UPDATE_PRODUCT', objInfo, id\r\n    } as const),\r\n    deleteProduct: (id: number) => ({\r\n        type: 'product/DELETE_PRODUCT', id\r\n    } as const)\r\n\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actionsStore>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\nexport const getProductsThunk = (limitPage: number, sortValue: string): ThunkType => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        dispatch(actionsStore.limitPageChanged(limitPage))\r\n        dispatch(actionsStore.sortedProducts(sortValue))\r\n        let data = await apiStore.getAllProducts(limitPage, sortValue)\r\n\r\n        dispatch(actionsStore.allProductsRecived(data))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport const getCategoryProductsThunk = (limitPage: number, sortValue: string, category: string): ThunkType => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        dispatch(actionsStore.limitPageChanged(limitPage))\r\n        dispatch(actionsStore.sortedProducts(sortValue))\r\n        let data = await apiStore.getCategoryProducts(limitPage, sortValue, category)\r\n        dispatch(actionsStore.allProductsRecived(data.data))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport const getSingleProductsThunk = (idProduct: number): ThunkType => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        let data = await apiStore.getSingleProduct(idProduct)\r\n        dispatch(actionsStore.productSelected(data))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport const getCategoryThunk = (): ThunkType => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        let data = await apiStore.getCategory()\r\n        dispatch(actionsStore.categoryProductsRecived(data.data))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\n\r\nexport const addNewProductThunk = (obj: ValuesType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        let data = await apiStore.addNewProduct(obj)\r\n        let x = JSON.parse(data.config.data)\r\n        dispatch(actionsStore.newProductAdded(x.obj))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport const changeProductinfoThunk = (id: number, objInfo: ValuesType): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        await apiStore.updateProductInfo(id, objInfo)\r\n\r\n        dispatch(actionsStore.productUpdated(objInfo, id))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport const deleteProductThunk = (id: number): ThunkType => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(actionsStore.isLoadingChanged(true))\r\n        let data = await apiStore.deleteProduct(id)\r\n        console.log(data)\r\n        dispatch(actionsStore.deleteProduct(id))\r\n        dispatch(actionsStore.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\nexport default StoreReducer","import { UsersType } from '../2-bll-users/UsersReducer';\r\nimport { instanse } from './../../../store-1-main/3-dal-main/api';\r\n\r\nexport const apiUsers = {\r\n    getAllUsers() {\r\n        return instanse.get(`users`)\r\n            .then(res => res.data)\r\n    },\r\n    loginAuth(username:string, password:string){\r\n        return instanse.post(`auth/login`, {username, password})\r\n        .then(res => res.data)\r\n    },\r\n    signUp(user: UsersType){\r\n        return instanse.post(`users`, {user})\r\n        .then(res => res.data)\r\n    },\r\n    getSingleUser(idUser:number){\r\n        return instanse.get(`users/${idUser}`)\r\n        .then(res => res.data)\r\n    },\r\n    updateUserInfo(idUser: number, user:UsersType){\r\n        return instanse.patch(`users/${idUser}`, {user})\r\n        .then(res => res.data)\r\n    },\r\n    deleteProfile(idUser: number){\r\n        return instanse.delete(`users/${idUser}`)\r\n        .then(res => res.data)\r\n    }\r\n}","import { CommonActionsTypes, CommonThunkType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\nimport { apiUsers } from './../3-dal-users/apiUsers';\r\n\r\n\r\nexport type UsersType = {\r\n    id?: number\r\n    email: string\r\n    username: string\r\n    password: string\r\n    name: {\r\n        firstname: string\r\n        lastname: string\r\n    },\r\n    address: {\r\n        city: string\r\n        street: string\r\n        number: number\r\n        zipcode: string\r\n        geolocation: {\r\n            lat: string\r\n            long: string\r\n        }\r\n    },\r\n    phone: string\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    token: null as null | '',\r\n    isAuth: false,\r\n    error: false,\r\n    singleUser: null as null | UsersType,\r\n    isLoading: true\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst UsersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'users/SET_ALL_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'users/SET_LOGIN_AUTH':\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: action.isAuth,\r\n                error: action.error\r\n            }\r\n\r\n        case 'users/SIGN_UP':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user],\r\n                isAuth: action.isAuth,\r\n            }\r\n        case 'users/SET_SINGLE_USER':\r\n            return {\r\n                ...state,\r\n                singleUser: action.singleUser\r\n\r\n            }\r\n        case 'users/UPDATE_PROFILE_INFO':\r\n            return {\r\n                ...state,\r\n                singleUser: action.user\r\n\r\n            }\r\n        case 'users/DELETE_PROFILE':\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(u => u.id !== action.id)\r\n\r\n            }\r\n        case 'user/TOOGLE_IS_LOAGING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const actionsUsers = {\r\n    usersRecived: (users: Array<UsersType>) => ({\r\n        type: 'users/SET_ALL_USERS', users\r\n    } as const),\r\n    loginSuccess: (token: null | '', isAuth: boolean, error: boolean) => ({\r\n        type: 'users/SET_LOGIN_AUTH', token, isAuth, error\r\n    } as const),\r\n    signUpSuccess: (user: UsersType, isAuth: boolean) => ({\r\n        type: 'users/SIGN_UP', user, isAuth\r\n    } as const),\r\n    userSelected: (singleUser: UsersType) => ({\r\n        type: 'users/SET_SINGLE_USER', singleUser\r\n    } as const),\r\n    profileInfoUpdated: (user: UsersType) => ({\r\n        type: 'users/UPDATE_PROFILE_INFO', user\r\n    } as const),\r\n    deleteProfile: (id: number) => ({\r\n        type: 'users/DELETE_PROFILE', id\r\n    } as const),\r\n    isLoadingChanged: (isLoading: boolean) => ({\r\n        type: 'user/TOOGLE_IS_LOAGING', isLoading\r\n    } as const),\r\n\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actionsUsers>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\n\r\nexport const getAllUsersThunk = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiUsers.getAllUsers()\r\n        dispatch(actionsUsers.usersRecived(data))\r\n    }\r\n}\r\n\r\nexport const loginAuthThunk = (userName: string, password: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiUsers.loginAuth(userName, password)\r\n        if (data.status === 'Error') {\r\n            dispatch(actionsUsers.loginSuccess(data, false, true))\r\n        }\r\n        if (data.token) {\r\n            dispatch(actionsUsers.loginSuccess(data, true, false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const signUpThunk = (user: UsersType): ThunkType => {\r\n    return async (dispatch) => {\r\n        await apiUsers.signUp(user)\r\n        dispatch(actionsUsers.signUpSuccess(user, true))\r\n    }\r\n}\r\n\r\nexport const getSingleUserThunk = (id: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await apiUsers.getSingleUser(id)\r\n        dispatch(actionsUsers.userSelected(data))\r\n    }\r\n}\r\n\r\nexport const updateProfileInfoThunk = (id: number, user: UsersType): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        let data = await apiUsers.updateUserInfo(id, user)\r\n        dispatch(actionsUsers.profileInfoUpdated(data))\r\n    }\r\n}\r\n\r\nexport const deleteProfileThunk = (id: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(actionsUsers.isLoadingChanged(true))\r\n        await apiUsers.deleteProfile(id)\r\n        dispatch(actionsUsers.deleteProfile(id))\r\n        dispatch(actionsUsers.isLoadingChanged(false))\r\n    }\r\n}\r\n\r\n\r\nexport default UsersReducer","import { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport CartReducer from \"../../store-2-features/ShopCart/2-bll-cart/CartReducer\";\r\nimport StoreReducer from \"../../store-2-features/Store/product-2-bll/StoreReducer\";\r\nimport UsersReducer from \"../../store-2-features/Users/2-bll-users/UsersReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    store: StoreReducer,\r\n    cart: CartReducer,\r\n    users: UsersReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type CommonActionsTypes<T> = T extends {[key: string]:(...args:any[])=> infer U }?U:never\r\n\r\nexport type CommonThunkType<A extends Action>= ThunkAction<Promise<void>, AppStateType, unknown, A>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import { AppStateType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\n\r\n\r\nexport const productsSelector=(state: AppStateType)=>{\r\n    return state.store.products\r\n}\r\n\r\nexport const isLoadingSelector=(state: AppStateType)=>{\r\n    return state.store.isLoading\r\n}\r\n\r\nexport const limitPageSelector=(state: AppStateType)=>{\r\n    return state.store.limitPage\r\n}\r\n\r\nexport const singleProductSelector=(state: AppStateType)=>{\r\n    return state.store.singleProduct\r\n}\r\n\r\nexport const sortValueSelector=(state: AppStateType)=>{\r\n    return state.store.sortValue\r\n}\r\n\r\nexport const categoryProductsSelector=(state: AppStateType)=>{\r\n    return state.store.category\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport s from './Store.module.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewProductThunk } from '../product-2-bll/StoreReducer';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\n\r\nexport type ValuesType = {\r\n    title: string\r\n    price: number\r\n    description: string\r\n    image: string\r\n    category: string\r\n}\r\n\r\nconst AddProductForm: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewForm = (values: ValuesType, { setSubmitting }: any) => {\r\n        let title = values.title\r\n        let price = values.price\r\n        let description = values.description\r\n        let image = values.image\r\n        let category = values.category\r\n\r\n        dispatch(addNewProductThunk({ title, price, description, image, category }))\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <Container maxWidth='sm' className={s.form_add_new_product}>\r\n            <h3>Add new product form</h3>\r\n            <Formik\r\n                initialValues={{ title: '', price: 0, description: '', image: '', category: '' }}\r\n                onSubmit={addNewForm}\r\n            >\r\n                {({ isSubmitting, handleChange, values, isValid }) => (\r\n                    <Form>\r\n                        <div><TextField onChange={handleChange} label=\"Title\" type=\"text\" name=\"title\" value={values.title} /></div>\r\n                        <div> <TextField onChange={handleChange} label=\"Price\" type=\"text\" name=\"price\" value={values.price} /></div>\r\n                        <div> <TextField onChange={handleChange} label=\"Description\" type=\"text\" name=\"description\" value={values.description} /> </div>\r\n                        <div> <TextField onChange={handleChange} label=\"Image url\" type=\"text\" name=\"image\" value={values.image} /></div>\r\n                        <TextField onChange={handleChange} label=\"Category\" type=\"text\" name=\"category\" value={values.category} />\r\n                        <div> <Button type=\"submit\" disabled={!isValid || isSubmitting} variant=\"contained\" color=\"primary\">\r\n                            Save </Button> </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddProductForm","import { AppStateType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\n\r\nexport const usersSelector=(state: AppStateType)=>{\r\n    return state.users.users\r\n}\r\n\r\nexport const isAuthSelector=(state: AppStateType)=>{\r\n    return state.users.isAuth\r\n}\r\n\r\nexport const errorSelector=(state: AppStateType)=>{\r\n    return state.users.error\r\n}\r\n\r\nexport const singleUserSelector=(state: AppStateType)=>{\r\n    return state.users.singleUser\r\n}\r\n\r\nexport const isLoadingSelector=(state: AppStateType)=>{\r\n    return state.users.isLoading\r\n}\r\n\r\nexport const tokenSelector=(state: AppStateType)=>{\r\n    return state.users.token\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\r\n\r\n\r\nexport const useStylesApp = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link: {\r\n      display: 'flex',\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.5),\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    breadcrumps: { \r\n      float: 'right',\r\n      marginTop: '10px',\r\n      marginRight: '150px',\r\n      fontSize: '13px',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.541)',\r\n      padding: '10px'\r\n    },\r\n    paper: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textTransform: 'uppercase',\r\n      color: 'white'\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport const useStylesStore = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container_grid: {\r\n            marginLeft: '150px'\r\n        },\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n    }),\r\n);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsSelector, limitPageSelector, isLoadingSelector, categoryProductsSelector } from '../product-2-bll/StoreSelector';\r\nimport { getProductsThunk, getCategoryThunk, getCategoryProductsThunk } from '../product-2-bll/StoreReducer';\r\nimport s from './Store.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addNewProductInCartThunk } from './../../ShopCart/2-bll-cart/CartReducer';\r\nimport { Container, IconButton, Grid, Box, Backdrop, CircularProgress, FormControl, InputLabel, Select, MenuItem, Button, Paper } from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport AddProductForm from './AddProductForm';\r\nimport { tokenSelector } from './../../Users/2-bll-users/UsersSelector'\r\nimport { useStylesStore } from '../../../store-3-common/Material.styles';\r\n\r\nconst Store: React.FC = () => {\r\n\r\n    const classes = useStylesStore();\r\n    const products = useSelector(productsSelector)\r\n    const limitPage = useSelector(limitPageSelector)\r\n    const isLoading = useSelector(isLoadingSelector)\r\n    const categoryProducts = useSelector(categoryProductsSelector)\r\n    const token = useSelector(tokenSelector)\r\n\r\n    const [pageLimit, setPageLimit] = useState(limitPage)\r\n    const [sortValue, setSortValue] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [visibleAddForm, setvisibleAddForm] = useState(false)\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsThunk(pageLimit, sortValue))\r\n        dispatch(getCategoryThunk())\r\n    }, [pageLimit, sortValue])\r\n\r\n\r\n    useEffect(() => {\r\n        if (category !== 'Все товары') {\r\n            dispatch(getCategoryProductsThunk(pageLimit, sortValue, category))\r\n        } else {\r\n            dispatch(getProductsThunk(pageLimit, sortValue))\r\n        }\r\n    }, [category])\r\n\r\n\r\n    if (isLoading) {\r\n        return <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n    }\r\n\r\n    const addProductInCart = (id: number) => {\r\n        let obj = {\r\n            userId: 1,\r\n            date: new Date(),\r\n            products: [{ productId: id, quantity: 1 }]\r\n        }\r\n        dispatch(addNewProductInCartThunk(obj))\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={s.container_store} maxWidth=\"lg\">\r\n\r\n\r\n            <Container maxWidth=\"md\" className={s.products_sort} >\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Order</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={sortValue}\r\n                        onChange={(e) => { setSortValue(e.target.value as string) }}  >\r\n                        <MenuItem value='asc'>first the old ones</MenuItem>\r\n                        <MenuItem value='desc'>new ones first</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        onChange={(e) => { setCategory(e.target.value as string) }}  >\r\n                        {categoryProducts && categoryProducts.map((c, index) => <MenuItem key={index} value={c as string}>{c}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Container>\r\n\r\n            <Box className={classes.container_grid}>\r\n\r\n                {token &&\r\n                    <div className={s.add_new_product}>\r\n                        <Button onClick={() => { setvisibleAddForm(!visibleAddForm) }} variant=\"contained\" color=\"secondary\"> Add New Product </Button>\r\n                    </div>\r\n\r\n                }\r\n\r\n                {visibleAddForm && <AddProductForm />}\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" spacing={2} className={s.root}>\r\n                    {products && products.map((p, index) => <Grid item key={index}>\r\n\r\n                        <Paper className={s.container_paper}>\r\n                            <NavLink to={`/products/${p.id}`}>\r\n                                <div className={s.title}> {p.title} </div>\r\n                            </NavLink>\r\n\r\n\r\n                            <div className={s.category}>{p.category}</div>\r\n                            <NavLink to={`/products/${p.id}`}>\r\n                                <div className={s.product_img}><img src={p.image} alt={p.title}></img></div>\r\n                            </NavLink>\r\n                            <div className={s.price}><b>{p.price} $</b></div>\r\n\r\n                            <div>\r\n                                <IconButton aria-label=\"add to favorites\">\r\n                                    <ShoppingCartIcon onClick={() => { addProductInCart(p.id as number) }} />\r\n                                </IconButton>\r\n\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>)}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Store","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLoadingSelector, singleProductSelector } from '../product-2-bll/StoreSelector';\r\nimport { changeProductinfoThunk, deleteProductThunk, getSingleProductsThunk } from '../product-2-bll/StoreReducer';\r\nimport s from './Store.module.css'\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { ValuesType } from './AddProductForm';\r\nimport { Button, Container, IconButton, Paper, TextField } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { addNewProductInCartThunk } from './../../ShopCart/2-bll-cart/CartReducer';\r\n\r\n\r\nconst Product: React.FC = () => {\r\n\r\n    const singleProduct = useSelector(singleProductSelector)\r\n    const isLoading = useSelector(isLoadingSelector)\r\n\r\n    const [changeProductFormVisible, setChangeProductFormVisible] = useState(false)\r\n    const [deleteSuccess, setdeleteSuccess] = useState(false)\r\n    const [changedSuccess, setchangedSuccess] = useState(false)\r\n    const [cartAdded, setCartAdded] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n    let adress = history.location.pathname\r\n    let id = Number(adress.substr(10))\r\n\r\n    const changeProductInfo = (values: ValuesType, { setSubmitting }: any) => {\r\n        let title = values.title\r\n        let price = values.price\r\n        let description = values.description\r\n        let image = values.image\r\n        let category = values.category\r\n\r\n        dispatch(changeProductinfoThunk(id, { title, price, description, image, category }))\r\n        console.log(title, price, description, image, category)\r\n        if (!isLoading) {\r\n            setChangeProductFormVisible(false)\r\n            setchangedSuccess(true)\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        dispatch(deleteProductThunk(id))\r\n        if (!isLoading) {\r\n            setdeleteSuccess(true)\r\n        }\r\n    }\r\n\r\n    const addProductInCart = (id: number) => {\r\n        let obj = {\r\n            userId: 1,\r\n            date: new Date(),\r\n            products: [{ productId: id, quantity: 1 }]\r\n        }\r\n        dispatch(addNewProductInCartThunk(obj))\r\n        setCartAdded(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProductsThunk(id))\r\n    }, [id])\r\n\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={s.products_container} maxWidth='sm'>\r\n            <Paper className={s.products_paper}>\r\n\r\n                <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n\r\n                {singleProduct ? <div>\r\n                    <div className={s.products_title}>\r\n                        <h3>{singleProduct.title}</h3>\r\n                        <div><b>Categoty: </b><div>{singleProduct.category}</div></div>\r\n                    </div>\r\n\r\n                    <div className={s.products_img}><img src={singleProduct.image} alt={singleProduct.title}></img></div>\r\n                    <h2>{singleProduct.price} $</h2>\r\n\r\n                    <div>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                            <ShoppingCartIcon onClick={() => { addProductInCart(singleProduct.id as number) }} />\r\n                        </IconButton>\r\n                        {cartAdded && <span>done!</span>}\r\n                    </div>\r\n\r\n                    <div className={s.products_description}><b>Description: </b><div>{singleProduct.description}</div></div>\r\n                </div> : null}\r\n                <div>\r\n\r\n                    {deleteSuccess ? <h4>Product deleted successfully !!! </h4> : null}\r\n                    {changedSuccess ? <h4>Product changed successfully !!! </h4> : null}\r\n\r\n\r\n                    {changeProductFormVisible &&\r\n\r\n                        <div className={s.products_form}>\r\n                            <Formik\r\n                                initialValues={{ title: '', price: 10, description: '', image: '', category: '' }}\r\n                                onSubmit={changeProductInfo}>\r\n                                {({ isSubmitting, handleChange, values, isValid }) => (\r\n                                    <Form>\r\n                                        <div><TextField onChange={handleChange} label=\"Title of product\" type=\"text\" name=\"title\" value={values.title} />\r\n                                        </div>\r\n                                        <div><TextField onChange={handleChange} label=\"Product price\" type=\"text\" name=\"price\" value={values.price} />\r\n                                        </div>\r\n                                        <div><TextField onChange={handleChange} label=\"Description\" type=\"text\" name=\"description\" value={values.description} />\r\n                                        </div>\r\n                                        <div> <TextField onChange={handleChange} label=\"Image url\" type=\"text\" name=\"image\" value={values.image} />\r\n                                        </div>\r\n                                        <div><TextField onChange={handleChange} label=\"Category of product\" type=\"text\" name=\"category\" value={values.category} />\r\n                                        </div>\r\n\r\n                                        <div className={s.products_button_form}>\r\n\r\n                                            <Button type=\"submit\" disabled={!isValid || isSubmitting} variant=\"contained\" color=\"primary\">\r\n                                                Save </Button>\r\n\r\n                                            <Button onClick={() => { setChangeProductFormVisible(false) }} variant=\"contained\" color=\"primary\">\r\n                                                Close </Button>\r\n\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    }\r\n\r\n                    <Button onClick={deleteProduct} variant=\"contained\" color=\"secondary\" className={s.products_button}>\r\n                        {isLoading ? 'Deleting...' : 'Delete product'} </Button>\r\n\r\n                    <Button onClick={() => { setChangeProductFormVisible(true) }} variant=\"contained\" color=\"secondary\" className={s.products_button}>\r\n                        Change info </Button>\r\n\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Product","import { AppStateType } from \"../../../store-1-main/2-bll-main/redux-store\"\r\n\r\n\r\nexport const cartsSelector=(state: AppStateType)=>{\r\n    return state.cart.carts\r\n}\r\n\r\nexport const singleCartSelector=(state: AppStateType)=>{\r\n    return state.cart.singleCart\r\n}\r\n\r\nexport const isLoadingSelector=(state: AppStateType)=>{\r\n    return state.cart.isLoading\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport s from './Cart.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cartsSelector } from './../2-bll-cart/CartSelector';\r\nimport { getAllCartsThunk } from './../2-bll-cart/CartReducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AdminAllCart = React.memo(() => {\r\n\r\n    const carts = useSelector(cartsSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCartsThunk())\r\n    }, [carts])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {carts.map((c, index) =><div key={index}> <NavLink to={`/cart/${c.id}`}>\r\n\r\n                <div className={s.cart_all} >\r\n\r\n                    <div>Date: {new Date(c.date).toLocaleDateString()}</div>\r\n                    <div>Number cart: {c.id}</div>\r\n\r\n                </div>\r\n            </NavLink></div>)}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default AdminAllCart","import { useEffect } from 'react';\r\nimport s from './User.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getAllUsersThunk } from '../2-bll-users/UsersReducer';\r\nimport { usersSelector } from './../2-bll-users/UsersSelector';\r\n\r\nconst Users = () => {\r\n    const users = useSelector(usersSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUsersThunk())\r\n    }, [users])\r\n\r\n    return (\r\n        <div>\r\n            {users.map((u) => <NavLink to={`/user/${u.id}`}> <div key={u.id} className={s.users_list}>\r\n                <div>{u.username}</div>\r\n                <div>{u.email}</div>\r\n            </div> </NavLink>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Users","import { useState } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport s from './User.module.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { signUpThunk } from '../2-bll-users/UsersReducer';\r\nimport { Redirect } from 'react-router';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\n\r\nexport type SignUpValuesType = {\r\n    email: string\r\n    password: string\r\n    userName: string\r\n    firstname: string\r\n    lastname: string\r\n    city: string\r\n    street: string\r\n    number: number\r\n    zipcode: string\r\n    phone: string\r\n\r\n}\r\n\r\nconst SignUpPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isAuth, setIsAuth] = useState(false)\r\n\r\n    const login = (values: SignUpValuesType, { setSubmitting }: any) => {\r\n        let newUser = {\r\n            email: values.email,\r\n            username: values.userName,\r\n            password: values.password,\r\n            name: {\r\n                firstname: values.firstname,\r\n                lastname: values.lastname\r\n            },\r\n            address: {\r\n                city: values.city,\r\n                street: values.street,\r\n                number: values.number,\r\n                zipcode: values.zipcode,\r\n                geolocation: {\r\n                    lat: '',\r\n                    long: ''\r\n                }\r\n            },\r\n            phone: values.phone\r\n        }\r\n        dispatch(signUpThunk(newUser))\r\n        setIsAuth(true)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Sign Up Form</h3>\r\n            <div className={s.sign_up_input}>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '', userName: '', firstname: '', lastname: '', city: '', street: '', number: 1, zipcode: '', phone: '' }}\r\n                    onSubmit={login}\r\n                >\r\n                    {({ isSubmitting, handleChange, values, isValid,\r\n                        handleBlur, }) => (\r\n                        <Form>\r\n                            <div>Common info </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"email\" value={values.email} label=\"Email\" />\r\n                            </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"userName\" value={values.userName} label=\"UserName\" />\r\n                            </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"firstname\" value={values.firstname} label=\"Firstname\" />\r\n                            </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"lastname\" value={values.lastname} label=\"Lastname\" />\r\n                            </div>\r\n                            <div>Adress  </div>\r\n                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                name=\"city\" value={values.city} label=\"City\" />\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"street\" value={values.street} label=\"Street\" />\r\n                            </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"number\" value={values.number} label=\"Number\" />\r\n                            </div>\r\n                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                name=\"zipcode\" value={values.zipcode} label=\"Zipcode\" />\r\n                            <div>Contacts </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"phone\" value={values.phone} label=\"Phone\" />\r\n                            </div>\r\n                            <div>\r\n                                <TextField onChange={handleChange} onBlur={handleBlur}\r\n                                    type=\"password\" name=\"password\" label=\"Password\" value={values.password} />\r\n                            </div>\r\n                            <div className={s.sign_up_button}>\r\n                                <Button type=\"submit\" disabled={!isValid || isSubmitting} variant=\"contained\" color=\"secondary\">\r\n                                    Sign Up </Button></div>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpPage","import { Formik, Form } from 'formik';\r\nimport s from './User.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginAuthThunk } from '../2-bll-users/UsersReducer';\r\nimport { isAuthSelector, errorSelector } from './../2-bll-users/UsersSelector';\r\nimport { Redirect } from 'react-router';\r\nimport SignUpPage from './SignUpPage';\r\nimport { Button, Container, Paper, TextField } from '@material-ui/core';\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n}\r\n  \r\nconst LoginPage = () => {\r\n\r\n    const isAuth = useSelector(isAuthSelector)\r\n    const error = useSelector(errorSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const login = (values: LoginFormValuesType, { setSubmitting }: any) => {\r\n        dispatch(loginAuthThunk(values.email, values.password))\r\n        setSubmitting(false)\r\n        values.email = ''\r\n        values.password = ''\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <Paper className={s.user_paper}>\r\n                <h3>Login Form</h3>\r\n                <div className={s.login_input}>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '' }}\r\n                    onSubmit={login}>\r\n\r\n                    {({ isSubmitting, handleChange, values, isValid,\r\n                        handleBlur, }) => (\r\n                        <Form>\r\n                            <div> <TextField id=\"standard-basic\" onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                    name=\"email\" value={values.email} label=\"Email\" /> </div>\r\n                            <div> <TextField id=\"standard-password-input\" label=\"Password\" type=\"password\" autoComplete=\"current-password\" onChange={handleChange} onBlur={handleBlur}\r\n                                    name=\"password\" value={values.password} /></div>\r\n                            <div className={s.login_button}>\r\n                                <Button type=\"submit\" disabled={!isValid || isSubmitting} variant=\"contained\" color=\"secondary\">\r\n                                    Login </Button></div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                </div>\r\n\r\n                {error && <div> Try again with Admin-Login-Page:\r\n                <div><b>Login - </b><span>mor_2314</span>\r\n                        <div><b>Password - </b><span> 83r5^_</span></div>\r\n                    </div></div> }\r\n\r\n                <SignUpPage />\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import { useEffect } from 'react';\r\nimport s from './User.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { getUserCartsThunk } from '../../ShopCart/2-bll-cart/CartReducer';\r\nimport { getSingleUserThunk } from '../2-bll-users/UsersReducer';\r\nimport { singleUserSelector } from './../2-bll-users/UsersSelector';\r\nimport { cartsSelector } from './../../ShopCart/2-bll-cart/CartSelector';\r\nimport { Container, Paper } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst User = () => {\r\n    const singleUser = useSelector(singleUserSelector)\r\n    const carts = useSelector(cartsSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n    let adress = history.location.pathname\r\n    let id = Number(adress.substr(6))\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleUserThunk(id))\r\n\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserCartsThunk(id))\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Paper className={s.user_paper}>\r\n                <NavLink to='/admin'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n                <h3> Info about user</h3>\r\n\r\n                {singleUser && <div>\r\n                    <div><b>User name: </b>{singleUser.name.firstname} {singleUser.name.lastname}</div>\r\n                    <div><b>User login: </b>{singleUser.username}</div>\r\n\r\n                    <div><b>Contacts: </b>\r\n                        <div>Email: {singleUser.email}</div>\r\n                        <div>Phone: {singleUser.phone}</div></div>\r\n\r\n                    <div><b>Adress: </b>\r\n                        <div>City: {singleUser.address.city}</div>\r\n                        <div>Street: {singleUser.address.street}</div>\r\n                        <div>Zipcode: {singleUser.address.zipcode}</div>\r\n                        <div>Geolocation lat: {singleUser.address.geolocation.lat}Geolocation long: {singleUser.address.geolocation.long}</div>\r\n                    </div>\r\n\r\n                </div>}\r\n                <div><h3>Cart of user</h3>\r\n                    {carts ? carts.map((c, index) =><div key={index}> <NavLink to={`/cart/${c.id}`}><div className={s.user_cart_info} >\r\n                        <div>Date: {new Date(c.date).toLocaleDateString()}</div>\r\n                        <div>{c.products.map((p, index) => <div key={index}>\r\n                            <b>ID of product: </b>{p.productId}\r\n                            <b>Quantity: </b>{p.quantity}\r\n                        </div>)}</div>\r\n                    </div></NavLink></div>) : 'null'}</div>\r\n\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default User\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport s from './Cart.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isLoadingSelector, singleCartSelector } from './../2-bll-cart/CartSelector';\r\nimport { getSingleCartThunk, deleteProductCartThunk } from './../2-bll-cart/CartReducer';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { Button, Container, Paper } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst AgminSingleCart = React.memo(() => {\r\n\r\n    const singleCart = useSelector(singleCartSelector)\r\n    const isLoading = useSelector(isLoadingSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n    let adress = history.location.pathname\r\n    let id = Number(adress.substr(6))\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleCartThunk(id))\r\n    }, [id])\r\n\r\n    let processOrder = () => {\r\n        dispatch(deleteProductCartThunk(id))\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Paper className={s.cart_single_paper}>\r\n\r\n                <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n\r\n                {singleCart && <div>\r\n                    <div><b>User id </b> <div>{singleCart.userId}</div> </div>\r\n                    <div><b>Date  </b> <div>{new Date(singleCart.date).toLocaleDateString()}</div></div>\r\n\r\n                    <div>{singleCart.products && singleCart.products.map((p, index) => <div key={index}>\r\n\r\n                        <b>Product № </b> {p.productId}\r\n                        <span className={s.cart_quanity}>\r\n                            <b>Quantity №  </b> {p.quantity}\r\n                        </span>\r\n                    </div>)}\r\n\r\n                    </div>\r\n                </div>}\r\n\r\n                {!isLoading && <h3>Сompleted successfully !</h3>}\r\n\r\n                <Button onClick={processOrder} className={s.orderButton} variant=\"contained\" color=\"secondary\">\r\n                    Process an order</Button>\r\n\r\n            </Paper>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default AgminSingleCart","import  { useEffect } from 'react';\r\nimport s from './Cart.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserCartsThunk } from '../2-bll-cart/CartReducer';\r\nimport { cartsSelector } from './../2-bll-cart/CartSelector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteProductCartThunk } from './../2-bll-cart/CartReducer';\r\nimport { Button, Container, Paper } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { isAuthSelector } from '../../Users/2-bll-users/UsersSelector';\r\n\r\nconst UserCart = () => {\r\n    const carts = useSelector(cartsSelector)\r\n    const isAuth = useSelector(isAuthSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserCartsThunk(1))\r\n    }, [])\r\n\r\n    const deleteCart = (id: number) => {\r\n        dispatch(deleteProductCartThunk(id))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Paper className={s.cart_paper}>\r\n                <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n\r\n                <h3>My Cart</h3>\r\n\r\n                {isAuth ?\r\n                    <> { carts ? carts.map((c, index) => <div key={index}>\r\n\r\n                                <div className={s.cart}>\r\n\r\n                                    <NavLink to={`/cart/${c.id}`}>\r\n                                        <h4>Cart {c.id}</h4>\r\n                                    </NavLink>\r\n\r\n                                    <div className={s.cart_date}><b>Date  </b> {new Date(c.date).toLocaleDateString()}</div>\r\n                                    <div>\r\n                                        {c.products.map((p, index) => <div key={index}>\r\n                                            <b>Product №  </b>\r\n                                            <span>{p.productId}</span>\r\n\r\n                                            <span className={s.cart_quanity}>\r\n                                                <b>Quantity №  </b>\r\n                                                <span>{p.quantity}</span>\r\n                                            </span>\r\n                                        </div>)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Button onClick={() => { deleteCart(c.id as number) }} className={s.cart_button} variant=\"contained\" color=\"secondary\">\r\n                                        Delete Cart </Button>\r\n                                </div>\r\n                            </div>) : 'null'}</>\r\n\r\n                    : <div>\r\n\r\n                        <h3>You should login</h3>\r\n                        \r\n                        <NavLink to='/login'>\r\n                            <Button className={s.adminButton} variant=\"contained\" color=\"secondary\">Login </Button>\r\n                        </NavLink>\r\n                    </div>\r\n                }\r\n            </Paper></Container>\r\n    )\r\n}\r\n\r\nexport default UserCart","import React, { useEffect, useState } from 'react';\r\nimport s from './User.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteProfileThunk, getSingleUserThunk, updateProfileInfoThunk } from '../2-bll-users/UsersReducer';\r\nimport { isAuthSelector, isLoadingSelector, singleUserSelector } from './../2-bll-users/UsersSelector';\r\nimport { Formik, Form } from 'formik';\r\nimport { SignUpValuesType } from './SignUpPage'\r\nimport { Button, Container, Paper, TextField } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst MyProfile = () => {\r\n    const singleUser = useSelector(singleUserSelector)\r\n    const isLoading = useSelector(isLoadingSelector)\r\n    const isAuth = useSelector(isAuthSelector)\r\n\r\n    const [visibleFormChanges, setVisibleFormChanges] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeInfo = (values: SignUpValuesType, { setSubmitting }: any) => {\r\n        let newUser = {\r\n            email: values.email,\r\n            username: values.userName,\r\n            password: values.password,\r\n            name: {\r\n                firstname: values.firstname,\r\n                lastname: values.lastname\r\n            },\r\n            address: {\r\n                city: values.city,\r\n                street: values.street,\r\n                number: values.number,\r\n                zipcode: values.zipcode,\r\n                geolocation: {\r\n                    lat: '',\r\n                    long: ''\r\n                }\r\n            },\r\n            phone: values.phone\r\n        }\r\n        dispatch(updateProfileInfoThunk(1, newUser))\r\n        setSubmitting(false)\r\n        setVisibleFormChanges(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleUserThunk(1))\r\n    }, [])\r\n\r\n    const deleteProfile = () => {\r\n        dispatch(deleteProfileThunk(1))\r\n    }\r\n\r\n    const changeProfile = () => {\r\n        setVisibleFormChanges(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Paper className={s.user_paper}>\r\n                <div className={s.user_title}>\r\n                    <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n                    <h2>My Profile</h2>\r\n\r\n                    <div>\r\n                        {isAuth ? <>\r\n                            {singleUser && <div>\r\n\r\n                                <div className={s.user_name}> <h3>Common info</h3>\r\n                                    <div><b>User name </b>{singleUser.name.firstname} {singleUser.name.lastname}</div>\r\n                                    <div><b>Login </b>{singleUser.username}</div></div>\r\n\r\n                                <div className={s.user_contacts}><h3>Contacts </h3>\r\n                                    <div><b>Email </b> {singleUser.email}</div>\r\n                                    <div><b>Phone </b> {singleUser.phone}</div></div>\r\n\r\n                                <div className={s.user_adress}><h3>Adress </h3>\r\n                                    <div><b>City </b> {singleUser.address.city}</div>\r\n                                    <div><b>Street </b>{singleUser.address.street}</div>\r\n                                    <div><b>Zipcode </b> {singleUser.address.zipcode}</div>\r\n                                    <div><b>Geolocation lat </b> {singleUser.address.geolocation.lat}Geolocation long: {singleUser.address.geolocation.long}</div>\r\n                                </div>\r\n\r\n                            </div>}\r\n\r\n                            {visibleFormChanges && <div className={s.user_form}>\r\n                                <Formik\r\n                                    initialValues={{ email: '', password: '', userName: '', firstname: '', lastname: '', city: '', street: '', number: 1, zipcode: '', phone: '' }}\r\n                                    onSubmit={changeInfo} >\r\n                                    {({ isSubmitting, handleChange, values, isValid,\r\n                                        handleBlur, }) => (\r\n                                        <Form>\r\n                                            <div>Common info </div>\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"email\" value={values.email} label=\"email\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"userName\" value={values.userName} label=\"userName\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"firstname\" value={values.firstname} label=\"firstname\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"lastname\" value={values.lastname} label=\"lastname\" />\r\n                                            <div>Adress  </div>\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"city\" value={values.city} label=\"city\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"street\" value={values.street} label=\"street\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"number\" value={values.number} label=\"number\" />\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"zipcode\" value={values.zipcode} label=\"zipcode\" />\r\n                                            <div>Contacts </div>\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur} type=\"text\"\r\n                                                name=\"phone\" value={values.phone} label=\"phone\" />\r\n\r\n                                            <TextField onChange={handleChange} onBlur={handleBlur}\r\n                                                type=\"password\" name=\"password\" label=\"Password\" value={values.password} />\r\n\r\n                                            <div className={s.user_change_button}>\r\n                                                <Button onClick={deleteProfile} variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!isValid || isSubmitting}>\r\n                                                    Change </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </div>\r\n                            }\r\n\r\n                            {!isLoading && <h3>Сompleted successfully !</h3>}\r\n\r\n                            <div className={s.user_button_form}>\r\n                                <Button onClick={changeProfile} type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                                    Change Profile </Button>\r\n                                <Button onClick={deleteProfile} variant=\"contained\" color=\"primary\">\r\n                                    Delete Profile </Button>\r\n                            </div>\r\n\r\n                        </>\r\n                            : <div>\r\n                                <h3>You should login</h3>\r\n                                <NavLink to='/login'>\r\n                                    <Button className={s.adminButton} variant=\"contained\" color=\"secondary\">Login </Button>\r\n                                </NavLink>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MyProfile","import React from 'react';\r\nimport { Button, Container, Paper } from '@material-ui/core';\r\nimport s from './Cart.module.css'\r\nimport { useState } from 'react';\r\nimport AdminAllCart from './AdminAllCart';\r\nimport Users from '../../Users/1-ui-users/Users';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAuthSelector } from '../../Users/2-bll-users/UsersSelector';\r\n\r\nconst AdminPage = () => {\r\n\r\n    const [orderVisible, setOrderVisible] = useState(false)\r\n    const [usersVisible, setUsersVisible] = useState(false)\r\n    const isAuth = useSelector(isAuthSelector)\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Paper className={s.cart_paper}>\r\n\r\n                {isAuth ? <React.Fragment>\r\n                    <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n\r\n                    <div onClick={() => { setUsersVisible(!usersVisible) }} className={s.cart_users}>Users</div>\r\n                    {usersVisible && <Users />}\r\n\r\n                    <div onClick={() => { setOrderVisible(!orderVisible) }} className={s.cart_orders}>Orders</div>\r\n                    {orderVisible && <AdminAllCart />}\r\n                </React.Fragment> \r\n\r\n                : <div>\r\n                        <NavLink to='/'><ArrowBackIosIcon className={s.back} /></NavLink>\r\n\r\n                        <h3>You should login as Admin</h3>\r\n\r\n                        <NavLink to='/login'>\r\n                            <Button className={s.adminButton} variant=\"contained\" color=\"secondary\">Login </Button>\r\n                        </NavLink>\r\n                        \r\n                    </div>}\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\nimport { Provider, useSelector } from 'react-redux';\nimport { Route, withRouter } from 'react-router';\nimport s from './App.module.css'\nimport { NavLink } from 'react-router-dom';\nimport store from '../2-bll-main/redux-store';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Store from '../../store-2-features/Store/product-1-ui/Store';\nimport Product from '../../store-2-features/Store/product-1-ui/Product';\nimport AdminAllCart from './../../store-2-features/ShopCart/1-ui-cart/AdminAllCart';\nimport Users from './../../store-2-features/Users/1-ui-users/Users';\nimport LoginPage from '../../store-2-features/Users/1-ui-users/LoginPage';\nimport User from '../../store-2-features/Users/1-ui-users/SingleUser';\nimport AgminSingleCart from '../../store-2-features/ShopCart/1-ui-cart/AdminSingleCart';\nimport UserCart from './../../store-2-features/ShopCart/1-ui-cart/UserCart';\nimport MyProfile from './../../store-2-features/Users/1-ui-users/MyProfile';\nimport { AppBar,IconButton, Toolbar, Typography, Breadcrumbs, Button, Popper, Paper, ClickAwayListener, MenuItem, MenuList, Grow, Divider, Badge } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { isAuthSelector } from '../../store-2-features/Users/2-bll-users/UsersSelector';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AdminPage from './../../store-2-features/ShopCart/1-ui-cart/AdminPage';\nimport { cartsSelector } from './../../store-2-features/ShopCart/2-bll-cart/CartSelector';\nimport { useStylesApp } from './../../store-3-common/Material.styles';\n\n\nconst App = () => {\n  const classes = useStylesApp()\n\n  const isAuth = useSelector(isAuthSelector)\n  const carts = useSelector(cartsSelector)\n\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current!.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n\n\n  return (\n    <React.Fragment>\n\n      <AppBar className={s.appbar} position=\"static\">\n        <Toolbar className={s.appbar} variant=\"dense\">\n\n          <div>\n            <Button ref={anchorRef} aria-controls={open ? 'menu-list-grow' : undefined} aria-haspopup=\"true\" onClick={handleToggle} >\n              <MenuIcon style={{ color: 'white' }} />\n            </Button>\n\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\n\n                  <Paper>\n\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n\n                        <MenuItem className={s.item_menu} onClick={handleClose}> <NavLink to='/'>\n                          <HomeIcon /> <span>Catalog</span></NavLink></MenuItem>\n\n                        <MenuItem className={s.item_menu} onClick={handleClose}> <NavLink to='/usercart'>\n                          <ShoppingCartIcon /><span>Shopping cart</span></NavLink></MenuItem>\n\n                        <MenuItem className={s.item_menu} onClick={handleClose}> <NavLink to='/profile'>\n                          <PersonIcon /><span>My Profile</span> </NavLink></MenuItem>\n\n                        {!isAuth && <MenuItem className={s.item_menu} onClick={handleClose}> <NavLink to='/login'>\n                          <ExitToAppIcon /><span >Login</span></NavLink></MenuItem>}\n                        <Divider />\n\n                        <MenuItem className={s.item_menu} onClick={handleClose}> <NavLink to='/admin'>\n                          <SupervisorAccountIcon /> <span>Admin profile</span></NavLink></MenuItem>\n\n                      </MenuList>\n\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\"><NavLink to='/' className={s.title}> E-shop </NavLink></Typography>\n\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={carts.length} color=\"secondary\">\n              <NavLink to='/usercart'> <ShoppingCartIcon style={{ color: 'white' }} /></NavLink>\n            </Badge>\n          </IconButton>\n\n        </Toolbar>\n      </AppBar>\n\n\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumps}>\n        <NavLink to='/' className={s.link}> Catalog </NavLink>\n        <NavLink to='/profile' className={s.link} > My Profile </NavLink>\n        <NavLink to='/usercart' className={s.link}> Shopping cart </NavLink>\n      </Breadcrumbs>\n\n\n      <Route exact path='/orders' render={() => <AdminAllCart />} />\n      <Route exact path='/cart/:Id?' render={() => <AgminSingleCart />} />\n      <Route path='/usercart' render={() => <UserCart />} />\n      <Route path='/users' render={() => <Users />} />\n      <Route path='/login' render={() => <LoginPage />} />\n      <Route exact path='/' render={() => <Store />} />\n      <Route exact path='/products/:Id?' render={() => <Product />} />\n      <Route exact path='/user/:Id?' render={() => <User />} />\n      <Route path='/profile' render={() => <MyProfile />} />\n      <Route path='/admin' render={() => <AdminPage />} />\n    </React.Fragment>\n  );\n}\n\n\nlet AppC = withRouter(App)\n\nconst AppContainer = () => {\n  return (\n    <AppC />\n  )\n}\n\nlet MainApp: React.FC = () => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainApp from './store-1-main/1-ui-main/App';\n\nReactDOM.render(\n\n    <MainApp />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_paper\":\"User_user_paper__PBGnN\",\"user_name\":\"User_user_name__1PLmr\",\"user_contacts\":\"User_user_contacts__3YhZF\",\"user_adress\":\"User_user_adress__1KG4q\",\"user_button_form\":\"User_user_button_form__3IJBU\",\"user_form\":\"User_user_form__qHz3b\",\"user_change_button\":\"User_user_change_button__KaEPy\",\"user_title\":\"User_user_title__13ATo\",\"login_button\":\"User_login_button__1Wyig\",\"login_input\":\"User_login_input___oM98\",\"sign_up_input\":\"User_sign_up_input__2Ohmq\",\"sign_up_button\":\"User_sign_up_button__3ArjL\",\"users_list\":\"User_users_list__1Gsba\",\"user_cart_info\":\"User_user_cart_info__3jBn-\",\"back\":\"User_back__2G6Wi\",\"adminButton\":\"User_adminButton__3cUoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_grid\":\"Store_container_grid__2ip6z\",\"container_item\":\"Store_container_item__1hvnL\",\"products_sort\":\"Store_products_sort__3X-5D\",\"products_img\":\"Store_products_img__1ZXuy\",\"products_paper\":\"Store_products_paper__3C4Ru\",\"products_title\":\"Store_products_title__1YYo5\",\"products_description\":\"Store_products_description__1wx75\",\"products_container\":\"Store_products_container__167Px\",\"products_button\":\"Store_products_button__1_57I\",\"products_form\":\"Store_products_form__z5xnH\",\"products_button_form\":\"Store_products_button_form__9gKNw\",\"form_add_new_product\":\"Store_form_add_new_product__Bf-BW\",\"product_img\":\"Store_product_img__3-Rm2\",\"container_paper\":\"Store_container_paper__PfaKK\",\"title\":\"Store_title__3az0A\",\"category\":\"Store_category__3S3l6\",\"price\":\"Store_price__2gBjJ\",\"add_new_product\":\"Store_add_new_product__1bVDi\",\"back\":\"Store_back__2WG8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart_paper\":\"Cart_cart_paper__32HzM\",\"cart_button\":\"Cart_cart_button__3sO9G\",\"cart\":\"Cart_cart__1udVp\",\"cart_quanity\":\"Cart_cart_quanity__2qP7V\",\"cart_date\":\"Cart_cart_date__HTMPi\",\"cart_single_paper\":\"Cart_cart_single_paper__2YkOu\",\"cart_users\":\"Cart_cart_users__1bqsf\",\"cart_orders\":\"Cart_cart_orders__rKBid\",\"cart_all\":\"Cart_cart_all__mCDLu\",\"back\":\"Cart_back__27gOs\",\"adminButton\":\"Cart_adminButton__16RRY\",\"orderButton\":\"Cart_orderButton__1qBKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"App_appbar__2zn0p\",\"link\":\"App_link__3wHz6\",\"form\":\"App_form__RVwQM\",\"item_menu\":\"App_item_menu__32GWD\",\"title\":\"App_title__N5yBp\"};"],"sourceRoot":""}